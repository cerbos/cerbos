// Copyright 2021-2025 Zenauth Ltd.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package cerbos.audit.v1;

import "cerbos/engine/v1/engine.proto";
import "cerbos/policy/v1/policy.proto";
import "google/protobuf/timestamp.proto";

option csharp_namespace = "Cerbos.Api.V1.Audit";
option go_package = "github.com/cerbos/cerbos/api/genpb/cerbos/audit/v1;auditv1";
option java_package = "dev.cerbos.api.v1.audit";

message AccessLogEntry {
  string call_id = 1;
  google.protobuf.Timestamp timestamp = 2;
  Peer peer = 3;
  map<string, MetaValues> metadata = 4;
  string method = 5;
  uint32 status_code = 6;
  bool oversized = 7;
  PolicySource policy_source = 8;
}

message DecisionLogEntry {
  message CheckResources {
    repeated cerbos.engine.v1.CheckInput inputs = 1;
    repeated cerbos.engine.v1.CheckOutput outputs = 2;
    string error = 3;
  }

  message PlanResources {
    cerbos.engine.v1.PlanResourcesInput input = 1;
    cerbos.engine.v1.PlanResourcesOutput output = 2;
    string error = 3;
  }

  string call_id = 1;
  google.protobuf.Timestamp timestamp = 2;
  Peer peer = 3;
  // Deprecated. Use method.check_resources.inputs instead.
  repeated cerbos.engine.v1.CheckInput inputs = 4 [deprecated = true];
  // Deprecated. Use method.check_resources.outputs instead.
  repeated cerbos.engine.v1.CheckOutput outputs = 5 [deprecated = true];
  // Deprecated. Use method.check_resources.error instead.
  string error = 6 [deprecated = true];
  oneof method {
    CheckResources check_resources = 7;
    PlanResources plan_resources = 8;
  }
  map<string, MetaValues> metadata = 15;
  AuditTrail audit_trail = 16;
  bool oversized = 17;
  PolicySource policy_source = 18;
}

message MetaValues {
  repeated string values = 1;
}

message Peer {
  string address = 1;
  string auth_info = 2;
  string user_agent = 3;
  string forwarded_for = 4;
}

message AuditTrail {
  map<string, cerbos.policy.v1.SourceAttributes> effective_policies = 1;
}

message PolicySource {
  message Blob {
    string bucket_url = 1;
    string prefix = 2;
  }

  message Database {
    enum Driver {
      DRIVER_UNSPECIFIED = 0;
      DRIVER_MYSQL = 1;
      DRIVER_POSTGRES = 2;
      DRIVER_SQLITE3 = 3;
    }

    Driver driver = 1;
  }

  message Disk {
    string directory = 1;
  }

  message EmbeddedPDP {
    string url = 1;
    string commit_hash = 2;
    google.protobuf.Timestamp built_at = 3;
  }

  message Git {
    string repository_url = 1;
    string branch = 2;
    string subdirectory = 3;
  }

  message Hub {
    message LocalBundle {
      string path = 1;
    }

    oneof source {
      string label = 1;
      string deployment_id = 2;
      string playground_id = 3;
      LocalBundle local_bundle = 4;
    }
  }

  oneof source {
    Blob blob = 1;
    Database database = 2;
    Disk disk = 3;
    Git git = 4;
    Hub hub = 5;
    EmbeddedPDP embedded_pdp = 6;
  }
}
