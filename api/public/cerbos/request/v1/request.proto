// Copyright 2021 Zenauth Ltd.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package cerbos.request.v1;

option go_package = "github.com/cerbos/cerbos/api/genpb/cerbos/request/v1;requestv1";
option java_package = "dev.cerbos.api.v1.request";
option csharp_namespace = "Cerbos.Api.V1.Request";

import "cerbos/engine/v1/engine.proto";
import "cerbos/policy/v1/policy.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

message CheckResourceSetRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
		json_schema: {
			description: "PDP Request"
		}
    };

    string request_id = 1 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "Optional application-specific ID useful for correlating logs for analysis."
            example: "\"c2db17b8-4f9f-4fb1-acfd-9162a02be42b\""
        } 
    ];
    repeated string actions = 2 [
        (validate.rules).repeated = { unique: true, min_items: 1, max_items: 10, items { string { min_len: 1 } } },
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "List of actions being performed on the set of resources."
            min_items: 1
            max_items: 10
            unique_items: true
            example: "[\"view:public\", \"comment\"]"
        } 
    ];
    cerbos.engine.v1.Principal principal = 3 [
        (validate.rules).message.required = true, 
        (google.api.field_behavior) = REQUIRED
    ];
    ResourceSet resource = 4 [
        (validate.rules).message.required = true, 
        (google.api.field_behavior) = REQUIRED
    ];
    bool include_meta = 5 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "Opt to receive request processing metadata in the response."
        }
    ];
}

message ResourceSet {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
		json_schema: {
			description: "Set of resources to check"
		}
    };

    string kind = 1 [
        (validate.rules).string = {pattern: "^[[:alpha:]][[:word:]\\@\\.\\-/]*(\\:[[:alpha:]][[:word:]\\@\\.\\-/]*)*$", min_len: 1}, 
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "Resource kind."
            example: "\"album:object\""
            pattern: "^[[:alpha:]][[:word:]\\@\\.\\-]*(\\:[[:alpha:]][[:word:]\\@\\.\\-]*)*$"
        }
    ];
    string policy_version = 2 [
        (validate.rules).string.pattern = "^[[:word:]]*$",
        (google.api.field_behavior) = OPTIONAL,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "The policy version to use to evaluate this request. If not specified, will default to the server-configured default version.",
            pattern: "^[[:word:]]*$"
            example: "\"default\""
        }
    ];
    map<string, AttributesMap> instances = 3 [
        (validate.rules).map = {min_pairs: 1, max_pairs: 20, no_sparse: true}, 
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "Set of resource instances to check. Each instance must be keyed by an application-specific unique identifier.",
            min_properties: 1
            max_properties: 20
            example: "{\"XX125\":{\"attr\":{\"owner\":\"bugs_bunny\", \"public\": false, \"flagged\": false}}, \"XX225\":{\"attr\":{\"owner\":\"daffy_duck\", \"public\": true, \"flagged\": false}}}"
        }
    ];
}

message AttributesMap {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
		json_schema: {
			description: "Unique identifier for the resource instance."
		}
    };

    map<string, google.protobuf.Value> attr = 1 [
        (validate.rules).map.no_sparse = true,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "Key-value pairs of contextual data about this instance that should be used during policy evaluation."
        }
    ];
}

message CheckResourceBatchRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
		json_schema: {
			description: "PDP Request"
		}
    };

    message BatchEntry {
        repeated string actions = 1 [
            (validate.rules).repeated = { unique: true, min_items: 1, max_items: 10, items { string { min_len: 1 } } },
            (google.api.field_behavior) = REQUIRED,
            (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
                description: "List of actions being performed on the resource."
                min_items: 1
                max_items: 10
                unique_items: true
                example: "[\"view:public\", \"comment\"]"
            } 
        ];
        cerbos.engine.v1.Resource resource = 2 [
            (validate.rules).message.required = true, 
            (google.api.field_behavior) = REQUIRED
        ];
    }

    string request_id = 1 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "Optional application-specific ID useful for correlating logs for analysis."
            example: "\"c2db17b8-4f9f-4fb1-acfd-9162a02be42b\""
        } 
    ];
    cerbos.engine.v1.Principal principal = 2 [
        (validate.rules).message.required = true, 
        (google.api.field_behavior) = REQUIRED
    ];
    repeated BatchEntry resources = 3 [
        (validate.rules).repeated = { min_items: 1, max_items: 20 },
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "List of resources and actions."
            min_items: 1
            max_items: 20
            unique_items: true
            example: "[{\"actions\":[\"view\",\"comment\"], \"resource\":{\"kind\":\"album:object\",\"policyVersion\":\"default\",\"id\":\"XX125\",\"attr\":{\"owner\":\"bugs_bunny\", \"public\": false, \"flagged\": false}}}]"
        } 
    ];
}


message PolicyFile {
    string file_name = 1 [
        (validate.rules).string.min_len = 1,
        (google.api.field_behavior) = REQUIRED
    ];

    bytes contents = 2 [
        (validate.rules).bytes = {min_len: 1, max_len: 1048576},
        (google.api.field_behavior) = REQUIRED
    ];
}

message PlaygroundValidateRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
		json_schema: {
			description: "Playground validate request"
		}
    };

    string playground_id = 1;

    repeated PolicyFile policy_files = 2 [
        (validate.rules).repeated = { min_items: 1, max_items: 10 },
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "List of policy files."
            min_items: 1
            max_items: 10
        } 
    ];
}

message PlaygroundEvaluateRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
		json_schema: {
			description: "Playground evaluate request"
		}
    };

    string playground_id = 1;

    repeated PolicyFile policy_files = 2 [
        (validate.rules).repeated = { min_items: 1, max_items: 10 },
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "List of policy files."
            min_items: 1
            max_items: 10
        } 
    ];

    cerbos.engine.v1.Principal principal = 3 [
        (validate.rules).message.required = true, 
        (google.api.field_behavior) = REQUIRED
    ];

    cerbos.engine.v1.Resource resource = 4 [
        (validate.rules).message.required = true, 
        (google.api.field_behavior) = REQUIRED
    ];

    repeated string actions = 5 [
        (validate.rules).repeated = { unique: true, min_items: 1, max_items: 10, items { string { min_len: 1 } } },
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "List of actions being performed on the resource."
            min_items: 1
            max_items: 10
            unique_items: true
        } 
    ];
}

message PlaygroundProxyRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
		json_schema: {
			description: "Playground proxy request"
		}
    };

    string playground_id = 1;

    repeated PolicyFile policy_files = 2 [
        (validate.rules).repeated = { min_items: 1, max_items: 10 },
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "List of policy files."
            min_items: 1
            max_items: 10
        } 
    ];

    oneof proxy_request {
        option (validate.required) = true;
        CheckResourceSetRequest check_resource_set = 3;
        CheckResourceBatchRequest check_resource_batch = 4;
    }
}

message AddOrUpdatePolicyRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
		json_schema: {
			description: "Add/update policy request"
		}
    };

    repeated cerbos.policy.v1.Policy policies = 1 [
        (validate.rules).repeated = { min_items: 1, max_items: 10 },
        (google.api.field_behavior) = REQUIRED,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "List of policies."
            min_items: 1
            max_items: 10
        } 
    ];
}

message ListAuditLogEntriesRequest {
    enum Kind {
        KIND_UNSPECIFIED = 0;
        KIND_ACCESS = 1;
        KIND_DECISION = 2;
    }

    message TimeRange {
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
            json_schema: {
                description: "Entries between a time range."
            }
        };

        google.protobuf.Timestamp start = 1 [
            (validate.rules).timestamp = {
                required: true,
                lt_now: true,
            },
            (google.api.field_behavior) = REQUIRED,
            (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
                description: "Start date in ISO 8601 format."
                example: "\"2021-07-05T07:27:01+00:00\""
            } 
        ];
        google.protobuf.Timestamp end = 2 [
            (validate.rules).timestamp = {
                required: true,
                lt_now: true,
            },
            (google.api.field_behavior) = REQUIRED,
            (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
                description: "End date in ISO 8601 format."
                example: "\"2021-07-05T07:27:01+00:00\""
            } 
        ];
    }

    Kind kind = 1 [
        (validate.rules).enum = {in: [1,2]},
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
            description: "Kind of log entry"
            enum: ["KIND_ACCESS", "KIND_DECISION"]
        } 
    ];
    oneof filter {
        option (validate.required) = true;
        uint32 tail = 2 [
            (validate.rules).uint32.lte = 1000,
            (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
                description: "Last N entries."
                minimum: 1
                maximum: 1000
            } 
        ];
        TimeRange between = 3;
        google.protobuf.Duration since = 4 [
            (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
                description: "Entries since N hours/minutes ago"
            } 
        ];
        string lookup = 5 [
            (validate.rules).string = {pattern: "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$"},
            (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = { 
                description: "By Call ID"
                pattern: "^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$"
            } 
        ];
    }
}

message ServerInfoRequest {
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
		json_schema: {
			description: "Server info request"
		}
    };
}

message ListPoliciesRequest { 
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
		json_schema: {
			description: "List policies request"
		}
    };
}
