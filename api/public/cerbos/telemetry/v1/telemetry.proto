// Copyright 2021-2022 Zenauth Ltd.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package cerbos.telemetry.v1;

import "google/protobuf/duration.proto";

option csharp_namespace = "Cerbos.Api.V1.Telemetry";
option go_package = "github.com/cerbos/cerbos/api/genpb/cerbos/telemetry/v1;telemetryv1";
option java_package = "dev.cerbos.api.v1.telemetry";

message ServerLaunch {
  message Cerbos {
    string version = 1;
    string commit = 2;
    string build_date = 3;
    string module_version = 4;
    string module_checksum = 5;
  }

  message Source {
    Cerbos cerbos = 1;
    string os = 2;
    string arch = 3;
    uint32 num_cpus = 4;
  }

  message Features {
    message Audit {
      bool enabled = 1;
      string backend = 2;
    }

    message Schema {
      string enforcement = 1;
    }

    message AdminApi {
      bool enabled = 1;
    }

    message Storage {
      message Disk {
        bool watch = 1;
      }

      message Git {
        string protocol = 1;
        bool auth = 2;
        google.protobuf.Duration poll_interval = 3;
      }

      message Blob {
        string provider = 1;
        google.protobuf.Duration poll_interval = 2;
      }

      string driver = 1;
      oneof store {
        Disk disk = 2;
        Git git = 3;
        Blob blob = 4;
      }
    }

    Audit audit = 1;
    Schema schema = 2;
    AdminApi admin_api = 3;
    Storage storage = 4;
  }

  message Stats {
    message Policy {
      map<string, uint32> count = 1;
      map<string, double> avg_rule_count = 2;
      map<string, double> avg_condition_count = 3;
    }

    message Schema {
      uint32 count = 1;
    }

    Policy policy = 1;
    Schema schema = 2;
  }

  string version = 1;
  Source source = 2;
  Features features = 3;
  Stats stats = 4;
}

message ServerStop {
  string version = 1;
  google.protobuf.Duration uptime = 2;
  uint64 requests_total = 3;
}

message Event {
  message CountStat {
    string key = 1;
    uint64 count = 2;
  }

  message ApiActivity {
    string version = 1;
    google.protobuf.Duration uptime = 2;
    repeated CountStat method_calls = 3;
    repeated CountStat user_agents = 4;
  }

  oneof data {
    ApiActivity api_activity = 1;
  }
}
