// Code generated by protoc-gen-go-hashpb. Do not edit.
// protoc-gen-go-hashpb v0.1.0
// Source: cerbos/telemetry/v1/telemetry.proto

package telemetryv1

import (
	hash "hash"
)

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping_Cerbos) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_Cerbos_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping_Source) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_Source_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping_Features) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_Features_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping_Features_Audit) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_Features_Audit_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping_Features_Schema) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_Features_Schema_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping_Features_AdminApi) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_Features_AdminApi_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping_Features_Storage) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_Features_Storage_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping_Features_Storage_Disk) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_Features_Storage_Disk_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping_Features_Storage_Git) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_Features_Storage_Git_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping_Features_Storage_Blob) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_Features_Storage_Blob_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping_Stats) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_Stats_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping_Stats_Policy) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_Stats_Policy_hashpb_sum(m, hasher, ignore)
	}
}

// HashPB computes a hash of the message using the given hash function
// The ignore set must contain fully-qualified field names (pkg.msg.field) that should be ignored from the hash
func (m *Ping_Stats_Schema) HashPB(hasher hash.Hash, ignore map[string]struct{}) {
	if m != nil {
		cerbos_telemetry_v1_Ping_Stats_Schema_hashpb_sum(m, hasher, ignore)
	}
}
