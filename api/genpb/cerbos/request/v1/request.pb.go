// Copyright 2021-2025 Zenauth Ltd.
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: cerbos/request/v1/request.proto

package requestv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/cerbos/cerbos/api/genpb/cerbos/engine/v1"
	v11 "github.com/cerbos/cerbos/api/genpb/cerbos/policy/v1"
	v12 "github.com/cerbos/cerbos/api/genpb/cerbos/schema/v1"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListAuditLogEntriesRequest_Kind int32

const (
	ListAuditLogEntriesRequest_KIND_UNSPECIFIED ListAuditLogEntriesRequest_Kind = 0
	ListAuditLogEntriesRequest_KIND_ACCESS      ListAuditLogEntriesRequest_Kind = 1
	ListAuditLogEntriesRequest_KIND_DECISION    ListAuditLogEntriesRequest_Kind = 2
)

// Enum value maps for ListAuditLogEntriesRequest_Kind.
var (
	ListAuditLogEntriesRequest_Kind_name = map[int32]string{
		0: "KIND_UNSPECIFIED",
		1: "KIND_ACCESS",
		2: "KIND_DECISION",
	}
	ListAuditLogEntriesRequest_Kind_value = map[string]int32{
		"KIND_UNSPECIFIED": 0,
		"KIND_ACCESS":      1,
		"KIND_DECISION":    2,
	}
)

func (x ListAuditLogEntriesRequest_Kind) Enum() *ListAuditLogEntriesRequest_Kind {
	p := new(ListAuditLogEntriesRequest_Kind)
	*p = x
	return p
}

func (x ListAuditLogEntriesRequest_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListAuditLogEntriesRequest_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_cerbos_request_v1_request_proto_enumTypes[0].Descriptor()
}

func (ListAuditLogEntriesRequest_Kind) Type() protoreflect.EnumType {
	return &file_cerbos_request_v1_request_proto_enumTypes[0]
}

func (x ListAuditLogEntriesRequest_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListAuditLogEntriesRequest_Kind.Descriptor instead.
func (ListAuditLogEntriesRequest_Kind) EnumDescriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{13, 0}
}

type PlanResourcesRequest struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	RequestId     string                          `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Action        string                          `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Principal     *v1.Principal                   `protobuf:"bytes,3,opt,name=principal,proto3" json:"principal,omitempty"`
	Resource      *v1.PlanResourcesInput_Resource `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	AuxData       *AuxData                        `protobuf:"bytes,5,opt,name=aux_data,json=auxData,proto3" json:"aux_data,omitempty"`
	IncludeMeta   bool                            `protobuf:"varint,6,opt,name=include_meta,json=includeMeta,proto3" json:"include_meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlanResourcesRequest) Reset() {
	*x = PlanResourcesRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlanResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanResourcesRequest) ProtoMessage() {}

func (x *PlanResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanResourcesRequest.ProtoReflect.Descriptor instead.
func (*PlanResourcesRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{0}
}

func (x *PlanResourcesRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *PlanResourcesRequest) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *PlanResourcesRequest) GetPrincipal() *v1.Principal {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *PlanResourcesRequest) GetResource() *v1.PlanResourcesInput_Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *PlanResourcesRequest) GetAuxData() *AuxData {
	if x != nil {
		return x.AuxData
	}
	return nil
}

func (x *PlanResourcesRequest) GetIncludeMeta() bool {
	if x != nil {
		return x.IncludeMeta
	}
	return false
}

// Deprecated. See CheckResourcesRequest.
type CheckResourceSetRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Actions       []string               `protobuf:"bytes,2,rep,name=actions,proto3" json:"actions,omitempty"`
	Principal     *v1.Principal          `protobuf:"bytes,3,opt,name=principal,proto3" json:"principal,omitempty"`
	Resource      *ResourceSet           `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	IncludeMeta   bool                   `protobuf:"varint,5,opt,name=include_meta,json=includeMeta,proto3" json:"include_meta,omitempty"`
	AuxData       *AuxData               `protobuf:"bytes,6,opt,name=aux_data,json=auxData,proto3" json:"aux_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckResourceSetRequest) Reset() {
	*x = CheckResourceSetRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckResourceSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResourceSetRequest) ProtoMessage() {}

func (x *CheckResourceSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResourceSetRequest.ProtoReflect.Descriptor instead.
func (*CheckResourceSetRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{1}
}

func (x *CheckResourceSetRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CheckResourceSetRequest) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *CheckResourceSetRequest) GetPrincipal() *v1.Principal {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *CheckResourceSetRequest) GetResource() *ResourceSet {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *CheckResourceSetRequest) GetIncludeMeta() bool {
	if x != nil {
		return x.IncludeMeta
	}
	return false
}

func (x *CheckResourceSetRequest) GetAuxData() *AuxData {
	if x != nil {
		return x.AuxData
	}
	return nil
}

type ResourceSet struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Kind          string                    `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	PolicyVersion string                    `protobuf:"bytes,2,opt,name=policy_version,json=policyVersion,proto3" json:"policy_version,omitempty"`
	Instances     map[string]*AttributesMap `protobuf:"bytes,3,rep,name=instances,proto3" json:"instances,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Scope         string                    `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResourceSet) Reset() {
	*x = ResourceSet{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceSet) ProtoMessage() {}

func (x *ResourceSet) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceSet.ProtoReflect.Descriptor instead.
func (*ResourceSet) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceSet) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *ResourceSet) GetPolicyVersion() string {
	if x != nil {
		return x.PolicyVersion
	}
	return ""
}

func (x *ResourceSet) GetInstances() map[string]*AttributesMap {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *ResourceSet) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

type AttributesMap struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Attr          map[string]*structpb.Value `protobuf:"bytes,1,rep,name=attr,proto3" json:"attr,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttributesMap) Reset() {
	*x = AttributesMap{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributesMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributesMap) ProtoMessage() {}

func (x *AttributesMap) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributesMap.ProtoReflect.Descriptor instead.
func (*AttributesMap) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{3}
}

func (x *AttributesMap) GetAttr() map[string]*structpb.Value {
	if x != nil {
		return x.Attr
	}
	return nil
}

// Deprecated. See CheckResourcesRequest.
type CheckResourceBatchRequest struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	RequestId     string                                  `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Principal     *v1.Principal                           `protobuf:"bytes,2,opt,name=principal,proto3" json:"principal,omitempty"`
	Resources     []*CheckResourceBatchRequest_BatchEntry `protobuf:"bytes,3,rep,name=resources,proto3" json:"resources,omitempty"`
	AuxData       *AuxData                                `protobuf:"bytes,4,opt,name=aux_data,json=auxData,proto3" json:"aux_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckResourceBatchRequest) Reset() {
	*x = CheckResourceBatchRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckResourceBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResourceBatchRequest) ProtoMessage() {}

func (x *CheckResourceBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResourceBatchRequest.ProtoReflect.Descriptor instead.
func (*CheckResourceBatchRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{4}
}

func (x *CheckResourceBatchRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CheckResourceBatchRequest) GetPrincipal() *v1.Principal {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *CheckResourceBatchRequest) GetResources() []*CheckResourceBatchRequest_BatchEntry {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *CheckResourceBatchRequest) GetAuxData() *AuxData {
	if x != nil {
		return x.AuxData
	}
	return nil
}

// Structure of the request for the check resources API call.
type CheckResourcesRequest struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	RequestId     string                                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	IncludeMeta   bool                                   `protobuf:"varint,2,opt,name=include_meta,json=includeMeta,proto3" json:"include_meta,omitempty"`
	Principal     *v1.Principal                          `protobuf:"bytes,3,opt,name=principal,proto3" json:"principal,omitempty"`
	Resources     []*CheckResourcesRequest_ResourceEntry `protobuf:"bytes,4,rep,name=resources,proto3" json:"resources,omitempty"`
	AuxData       *AuxData                               `protobuf:"bytes,5,opt,name=aux_data,json=auxData,proto3" json:"aux_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckResourcesRequest) Reset() {
	*x = CheckResourcesRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResourcesRequest) ProtoMessage() {}

func (x *CheckResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResourcesRequest.ProtoReflect.Descriptor instead.
func (*CheckResourcesRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{5}
}

func (x *CheckResourcesRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CheckResourcesRequest) GetIncludeMeta() bool {
	if x != nil {
		return x.IncludeMeta
	}
	return false
}

func (x *CheckResourcesRequest) GetPrincipal() *v1.Principal {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *CheckResourcesRequest) GetResources() []*CheckResourcesRequest_ResourceEntry {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *CheckResourcesRequest) GetAuxData() *AuxData {
	if x != nil {
		return x.AuxData
	}
	return nil
}

type AuxData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jwt           *AuxData_JWT           `protobuf:"bytes,1,opt,name=jwt,proto3" json:"jwt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuxData) Reset() {
	*x = AuxData{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuxData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuxData) ProtoMessage() {}

func (x *AuxData) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuxData.ProtoReflect.Descriptor instead.
func (*AuxData) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{6}
}

func (x *AuxData) GetJwt() *AuxData_JWT {
	if x != nil {
		return x.Jwt
	}
	return nil
}

type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Contents      []byte                 `protobuf:"bytes,2,opt,name=contents,proto3" json:"contents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{7}
}

func (x *File) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *File) GetContents() []byte {
	if x != nil {
		return x.Contents
	}
	return nil
}

type PlaygroundValidateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaygroundId  string                 `protobuf:"bytes,1,opt,name=playground_id,json=playgroundId,proto3" json:"playground_id,omitempty"`
	Files         []*File                `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaygroundValidateRequest) Reset() {
	*x = PlaygroundValidateRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaygroundValidateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaygroundValidateRequest) ProtoMessage() {}

func (x *PlaygroundValidateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaygroundValidateRequest.ProtoReflect.Descriptor instead.
func (*PlaygroundValidateRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{8}
}

func (x *PlaygroundValidateRequest) GetPlaygroundId() string {
	if x != nil {
		return x.PlaygroundId
	}
	return ""
}

func (x *PlaygroundValidateRequest) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

type PlaygroundTestRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaygroundId  string                 `protobuf:"bytes,1,opt,name=playground_id,json=playgroundId,proto3" json:"playground_id,omitempty"`
	Files         []*File                `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaygroundTestRequest) Reset() {
	*x = PlaygroundTestRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaygroundTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaygroundTestRequest) ProtoMessage() {}

func (x *PlaygroundTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaygroundTestRequest.ProtoReflect.Descriptor instead.
func (*PlaygroundTestRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{9}
}

func (x *PlaygroundTestRequest) GetPlaygroundId() string {
	if x != nil {
		return x.PlaygroundId
	}
	return ""
}

func (x *PlaygroundTestRequest) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

type PlaygroundEvaluateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlaygroundId  string                 `protobuf:"bytes,1,opt,name=playground_id,json=playgroundId,proto3" json:"playground_id,omitempty"`
	Files         []*File                `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	Principal     *v1.Principal          `protobuf:"bytes,3,opt,name=principal,proto3" json:"principal,omitempty"`
	Resource      *v1.Resource           `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	Actions       []string               `protobuf:"bytes,5,rep,name=actions,proto3" json:"actions,omitempty"`
	AuxData       *AuxData               `protobuf:"bytes,6,opt,name=aux_data,json=auxData,proto3" json:"aux_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaygroundEvaluateRequest) Reset() {
	*x = PlaygroundEvaluateRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaygroundEvaluateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaygroundEvaluateRequest) ProtoMessage() {}

func (x *PlaygroundEvaluateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaygroundEvaluateRequest.ProtoReflect.Descriptor instead.
func (*PlaygroundEvaluateRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{10}
}

func (x *PlaygroundEvaluateRequest) GetPlaygroundId() string {
	if x != nil {
		return x.PlaygroundId
	}
	return ""
}

func (x *PlaygroundEvaluateRequest) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *PlaygroundEvaluateRequest) GetPrincipal() *v1.Principal {
	if x != nil {
		return x.Principal
	}
	return nil
}

func (x *PlaygroundEvaluateRequest) GetResource() *v1.Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *PlaygroundEvaluateRequest) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *PlaygroundEvaluateRequest) GetAuxData() *AuxData {
	if x != nil {
		return x.AuxData
	}
	return nil
}

type PlaygroundProxyRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	PlaygroundId string                 `protobuf:"bytes,1,opt,name=playground_id,json=playgroundId,proto3" json:"playground_id,omitempty"`
	Files        []*File                `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	// Types that are valid to be assigned to ProxyRequest:
	//
	//	*PlaygroundProxyRequest_CheckResourceSet
	//	*PlaygroundProxyRequest_CheckResourceBatch
	//	*PlaygroundProxyRequest_PlanResources
	//	*PlaygroundProxyRequest_CheckResources
	ProxyRequest  isPlaygroundProxyRequest_ProxyRequest `protobuf_oneof:"proxy_request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlaygroundProxyRequest) Reset() {
	*x = PlaygroundProxyRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaygroundProxyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaygroundProxyRequest) ProtoMessage() {}

func (x *PlaygroundProxyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaygroundProxyRequest.ProtoReflect.Descriptor instead.
func (*PlaygroundProxyRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{11}
}

func (x *PlaygroundProxyRequest) GetPlaygroundId() string {
	if x != nil {
		return x.PlaygroundId
	}
	return ""
}

func (x *PlaygroundProxyRequest) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *PlaygroundProxyRequest) GetProxyRequest() isPlaygroundProxyRequest_ProxyRequest {
	if x != nil {
		return x.ProxyRequest
	}
	return nil
}

func (x *PlaygroundProxyRequest) GetCheckResourceSet() *CheckResourceSetRequest {
	if x != nil {
		if x, ok := x.ProxyRequest.(*PlaygroundProxyRequest_CheckResourceSet); ok {
			return x.CheckResourceSet
		}
	}
	return nil
}

func (x *PlaygroundProxyRequest) GetCheckResourceBatch() *CheckResourceBatchRequest {
	if x != nil {
		if x, ok := x.ProxyRequest.(*PlaygroundProxyRequest_CheckResourceBatch); ok {
			return x.CheckResourceBatch
		}
	}
	return nil
}

func (x *PlaygroundProxyRequest) GetPlanResources() *PlanResourcesRequest {
	if x != nil {
		if x, ok := x.ProxyRequest.(*PlaygroundProxyRequest_PlanResources); ok {
			return x.PlanResources
		}
	}
	return nil
}

func (x *PlaygroundProxyRequest) GetCheckResources() *CheckResourcesRequest {
	if x != nil {
		if x, ok := x.ProxyRequest.(*PlaygroundProxyRequest_CheckResources); ok {
			return x.CheckResources
		}
	}
	return nil
}

type isPlaygroundProxyRequest_ProxyRequest interface {
	isPlaygroundProxyRequest_ProxyRequest()
}

type PlaygroundProxyRequest_CheckResourceSet struct {
	CheckResourceSet *CheckResourceSetRequest `protobuf:"bytes,3,opt,name=check_resource_set,json=checkResourceSet,proto3,oneof"`
}

type PlaygroundProxyRequest_CheckResourceBatch struct {
	CheckResourceBatch *CheckResourceBatchRequest `protobuf:"bytes,4,opt,name=check_resource_batch,json=checkResourceBatch,proto3,oneof"`
}

type PlaygroundProxyRequest_PlanResources struct {
	PlanResources *PlanResourcesRequest `protobuf:"bytes,5,opt,name=plan_resources,json=planResources,proto3,oneof"`
}

type PlaygroundProxyRequest_CheckResources struct {
	CheckResources *CheckResourcesRequest `protobuf:"bytes,6,opt,name=check_resources,json=checkResources,proto3,oneof"`
}

func (*PlaygroundProxyRequest_CheckResourceSet) isPlaygroundProxyRequest_ProxyRequest() {}

func (*PlaygroundProxyRequest_CheckResourceBatch) isPlaygroundProxyRequest_ProxyRequest() {}

func (*PlaygroundProxyRequest_PlanResources) isPlaygroundProxyRequest_ProxyRequest() {}

func (*PlaygroundProxyRequest_CheckResources) isPlaygroundProxyRequest_ProxyRequest() {}

type AddOrUpdatePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Policies      []*v11.Policy          `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddOrUpdatePolicyRequest) Reset() {
	*x = AddOrUpdatePolicyRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOrUpdatePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrUpdatePolicyRequest) ProtoMessage() {}

func (x *AddOrUpdatePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrUpdatePolicyRequest.ProtoReflect.Descriptor instead.
func (*AddOrUpdatePolicyRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{12}
}

func (x *AddOrUpdatePolicyRequest) GetPolicies() []*v11.Policy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type ListAuditLogEntriesRequest struct {
	state protoimpl.MessageState          `protogen:"open.v1"`
	Kind  ListAuditLogEntriesRequest_Kind `protobuf:"varint,1,opt,name=kind,proto3,enum=cerbos.request.v1.ListAuditLogEntriesRequest_Kind" json:"kind,omitempty"`
	// Types that are valid to be assigned to Filter:
	//
	//	*ListAuditLogEntriesRequest_Tail
	//	*ListAuditLogEntriesRequest_Between
	//	*ListAuditLogEntriesRequest_Since
	//	*ListAuditLogEntriesRequest_Lookup
	Filter        isListAuditLogEntriesRequest_Filter `protobuf_oneof:"filter"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAuditLogEntriesRequest) Reset() {
	*x = ListAuditLogEntriesRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAuditLogEntriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditLogEntriesRequest) ProtoMessage() {}

func (x *ListAuditLogEntriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditLogEntriesRequest.ProtoReflect.Descriptor instead.
func (*ListAuditLogEntriesRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{13}
}

func (x *ListAuditLogEntriesRequest) GetKind() ListAuditLogEntriesRequest_Kind {
	if x != nil {
		return x.Kind
	}
	return ListAuditLogEntriesRequest_KIND_UNSPECIFIED
}

func (x *ListAuditLogEntriesRequest) GetFilter() isListAuditLogEntriesRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListAuditLogEntriesRequest) GetTail() uint32 {
	if x != nil {
		if x, ok := x.Filter.(*ListAuditLogEntriesRequest_Tail); ok {
			return x.Tail
		}
	}
	return 0
}

func (x *ListAuditLogEntriesRequest) GetBetween() *ListAuditLogEntriesRequest_TimeRange {
	if x != nil {
		if x, ok := x.Filter.(*ListAuditLogEntriesRequest_Between); ok {
			return x.Between
		}
	}
	return nil
}

func (x *ListAuditLogEntriesRequest) GetSince() *durationpb.Duration {
	if x != nil {
		if x, ok := x.Filter.(*ListAuditLogEntriesRequest_Since); ok {
			return x.Since
		}
	}
	return nil
}

func (x *ListAuditLogEntriesRequest) GetLookup() string {
	if x != nil {
		if x, ok := x.Filter.(*ListAuditLogEntriesRequest_Lookup); ok {
			return x.Lookup
		}
	}
	return ""
}

type isListAuditLogEntriesRequest_Filter interface {
	isListAuditLogEntriesRequest_Filter()
}

type ListAuditLogEntriesRequest_Tail struct {
	Tail uint32 `protobuf:"varint,2,opt,name=tail,proto3,oneof"`
}

type ListAuditLogEntriesRequest_Between struct {
	Between *ListAuditLogEntriesRequest_TimeRange `protobuf:"bytes,3,opt,name=between,proto3,oneof"`
}

type ListAuditLogEntriesRequest_Since struct {
	Since *durationpb.Duration `protobuf:"bytes,4,opt,name=since,proto3,oneof"`
}

type ListAuditLogEntriesRequest_Lookup struct {
	Lookup string `protobuf:"bytes,5,opt,name=lookup,proto3,oneof"`
}

func (*ListAuditLogEntriesRequest_Tail) isListAuditLogEntriesRequest_Filter() {}

func (*ListAuditLogEntriesRequest_Between) isListAuditLogEntriesRequest_Filter() {}

func (*ListAuditLogEntriesRequest_Since) isListAuditLogEntriesRequest_Filter() {}

func (*ListAuditLogEntriesRequest_Lookup) isListAuditLogEntriesRequest_Filter() {}

type ServerInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInfoRequest) Reset() {
	*x = ServerInfoRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfoRequest) ProtoMessage() {}

func (x *ServerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfoRequest.ProtoReflect.Descriptor instead.
func (*ServerInfoRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{14}
}

type ListPoliciesRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IncludeDisabled bool                   `protobuf:"varint,1,opt,name=include_disabled,json=includeDisabled,proto3" json:"include_disabled,omitempty"`
	NameRegexp      string                 `protobuf:"bytes,2,opt,name=name_regexp,json=nameRegexp,proto3" json:"name_regexp,omitempty"`
	ScopeRegexp     string                 `protobuf:"bytes,3,opt,name=scope_regexp,json=scopeRegexp,proto3" json:"scope_regexp,omitempty"`
	VersionRegexp   string                 `protobuf:"bytes,4,opt,name=version_regexp,json=versionRegexp,proto3" json:"version_regexp,omitempty"`
	PolicyId        []string               `protobuf:"bytes,5,rep,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListPoliciesRequest) Reset() {
	*x = ListPoliciesRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPoliciesRequest) ProtoMessage() {}

func (x *ListPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPoliciesRequest.ProtoReflect.Descriptor instead.
func (*ListPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{15}
}

func (x *ListPoliciesRequest) GetIncludeDisabled() bool {
	if x != nil {
		return x.IncludeDisabled
	}
	return false
}

func (x *ListPoliciesRequest) GetNameRegexp() string {
	if x != nil {
		return x.NameRegexp
	}
	return ""
}

func (x *ListPoliciesRequest) GetScopeRegexp() string {
	if x != nil {
		return x.ScopeRegexp
	}
	return ""
}

func (x *ListPoliciesRequest) GetVersionRegexp() string {
	if x != nil {
		return x.VersionRegexp
	}
	return ""
}

func (x *ListPoliciesRequest) GetPolicyId() []string {
	if x != nil {
		return x.PolicyId
	}
	return nil
}

type GetPolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []string               `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPolicyRequest) Reset() {
	*x = GetPolicyRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyRequest) ProtoMessage() {}

func (x *GetPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetPolicyRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{16}
}

func (x *GetPolicyRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type DisablePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []string               `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisablePolicyRequest) Reset() {
	*x = DisablePolicyRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisablePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisablePolicyRequest) ProtoMessage() {}

func (x *DisablePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisablePolicyRequest.ProtoReflect.Descriptor instead.
func (*DisablePolicyRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{17}
}

func (x *DisablePolicyRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type EnablePolicyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []string               `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnablePolicyRequest) Reset() {
	*x = EnablePolicyRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnablePolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnablePolicyRequest) ProtoMessage() {}

func (x *EnablePolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnablePolicyRequest.ProtoReflect.Descriptor instead.
func (*EnablePolicyRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{18}
}

func (x *EnablePolicyRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type InspectPoliciesRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IncludeDisabled bool                   `protobuf:"varint,1,opt,name=include_disabled,json=includeDisabled,proto3" json:"include_disabled,omitempty"`
	NameRegexp      string                 `protobuf:"bytes,2,opt,name=name_regexp,json=nameRegexp,proto3" json:"name_regexp,omitempty"`
	ScopeRegexp     string                 `protobuf:"bytes,3,opt,name=scope_regexp,json=scopeRegexp,proto3" json:"scope_regexp,omitempty"`
	VersionRegexp   string                 `protobuf:"bytes,4,opt,name=version_regexp,json=versionRegexp,proto3" json:"version_regexp,omitempty"`
	PolicyId        []string               `protobuf:"bytes,5,rep,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InspectPoliciesRequest) Reset() {
	*x = InspectPoliciesRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InspectPoliciesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectPoliciesRequest) ProtoMessage() {}

func (x *InspectPoliciesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectPoliciesRequest.ProtoReflect.Descriptor instead.
func (*InspectPoliciesRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{19}
}

func (x *InspectPoliciesRequest) GetIncludeDisabled() bool {
	if x != nil {
		return x.IncludeDisabled
	}
	return false
}

func (x *InspectPoliciesRequest) GetNameRegexp() string {
	if x != nil {
		return x.NameRegexp
	}
	return ""
}

func (x *InspectPoliciesRequest) GetScopeRegexp() string {
	if x != nil {
		return x.ScopeRegexp
	}
	return ""
}

func (x *InspectPoliciesRequest) GetVersionRegexp() string {
	if x != nil {
		return x.VersionRegexp
	}
	return ""
}

func (x *InspectPoliciesRequest) GetPolicyId() []string {
	if x != nil {
		return x.PolicyId
	}
	return nil
}

type AddOrUpdateSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Schemas       []*v12.Schema          `protobuf:"bytes,1,rep,name=schemas,proto3" json:"schemas,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddOrUpdateSchemaRequest) Reset() {
	*x = AddOrUpdateSchemaRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddOrUpdateSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddOrUpdateSchemaRequest) ProtoMessage() {}

func (x *AddOrUpdateSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddOrUpdateSchemaRequest.ProtoReflect.Descriptor instead.
func (*AddOrUpdateSchemaRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{20}
}

func (x *AddOrUpdateSchemaRequest) GetSchemas() []*v12.Schema {
	if x != nil {
		return x.Schemas
	}
	return nil
}

type ListSchemasRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSchemasRequest) Reset() {
	*x = ListSchemasRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSchemasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSchemasRequest) ProtoMessage() {}

func (x *ListSchemasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSchemasRequest.ProtoReflect.Descriptor instead.
func (*ListSchemasRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{21}
}

type GetSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []string               `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSchemaRequest) Reset() {
	*x = GetSchemaRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSchemaRequest) ProtoMessage() {}

func (x *GetSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSchemaRequest.ProtoReflect.Descriptor instead.
func (*GetSchemaRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{22}
}

func (x *GetSchemaRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteSchemaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []string               `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteSchemaRequest) Reset() {
	*x = DeleteSchemaRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteSchemaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSchemaRequest) ProtoMessage() {}

func (x *DeleteSchemaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSchemaRequest.ProtoReflect.Descriptor instead.
func (*DeleteSchemaRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteSchemaRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type ReloadStoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Wait          bool                   `protobuf:"varint,1,opt,name=wait,proto3" json:"wait,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReloadStoreRequest) Reset() {
	*x = ReloadStoreRequest{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReloadStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReloadStoreRequest) ProtoMessage() {}

func (x *ReloadStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReloadStoreRequest.ProtoReflect.Descriptor instead.
func (*ReloadStoreRequest) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{24}
}

func (x *ReloadStoreRequest) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

type CheckResourceBatchRequest_BatchEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Actions       []string               `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	Resource      *v1.Resource           `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckResourceBatchRequest_BatchEntry) Reset() {
	*x = CheckResourceBatchRequest_BatchEntry{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckResourceBatchRequest_BatchEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResourceBatchRequest_BatchEntry) ProtoMessage() {}

func (x *CheckResourceBatchRequest_BatchEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResourceBatchRequest_BatchEntry.ProtoReflect.Descriptor instead.
func (*CheckResourceBatchRequest_BatchEntry) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CheckResourceBatchRequest_BatchEntry) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *CheckResourceBatchRequest_BatchEntry) GetResource() *v1.Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type CheckResourcesRequest_ResourceEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Actions       []string               `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	Resource      *v1.Resource           `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckResourcesRequest_ResourceEntry) Reset() {
	*x = CheckResourcesRequest_ResourceEntry{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckResourcesRequest_ResourceEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResourcesRequest_ResourceEntry) ProtoMessage() {}

func (x *CheckResourcesRequest_ResourceEntry) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResourcesRequest_ResourceEntry.ProtoReflect.Descriptor instead.
func (*CheckResourcesRequest_ResourceEntry) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{5, 0}
}

func (x *CheckResourcesRequest_ResourceEntry) GetActions() []string {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *CheckResourcesRequest_ResourceEntry) GetResource() *v1.Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

type AuxData_JWT struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	KeySetId      string                 `protobuf:"bytes,2,opt,name=key_set_id,json=keySetId,proto3" json:"key_set_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuxData_JWT) Reset() {
	*x = AuxData_JWT{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuxData_JWT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuxData_JWT) ProtoMessage() {}

func (x *AuxData_JWT) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuxData_JWT.ProtoReflect.Descriptor instead.
func (*AuxData_JWT) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{6, 0}
}

func (x *AuxData_JWT) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuxData_JWT) GetKeySetId() string {
	if x != nil {
		return x.KeySetId
	}
	return ""
}

type ListAuditLogEntriesRequest_TimeRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End           *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAuditLogEntriesRequest_TimeRange) Reset() {
	*x = ListAuditLogEntriesRequest_TimeRange{}
	mi := &file_cerbos_request_v1_request_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAuditLogEntriesRequest_TimeRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAuditLogEntriesRequest_TimeRange) ProtoMessage() {}

func (x *ListAuditLogEntriesRequest_TimeRange) ProtoReflect() protoreflect.Message {
	mi := &file_cerbos_request_v1_request_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAuditLogEntriesRequest_TimeRange.ProtoReflect.Descriptor instead.
func (*ListAuditLogEntriesRequest_TimeRange) Descriptor() ([]byte, []int) {
	return file_cerbos_request_v1_request_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ListAuditLogEntriesRequest_TimeRange) GetStart() *timestamppb.Timestamp {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *ListAuditLogEntriesRequest_TimeRange) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

var File_cerbos_request_v1_request_proto protoreflect.FileDescriptor

const file_cerbos_request_v1_request_proto_rawDesc = "" +
	"\n" +
	"\x1fcerbos/request/v1/request.proto\x12\x11cerbos.request.v1\x1a\x1bbuf/validate/validate.proto\x1a\x1dcerbos/engine/v1/engine.proto\x1a\x1dcerbos/policy/v1/policy.proto\x1a\x1dcerbos/schema/v1/schema.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x82\x05\n" +
	"\x14PlanResourcesRequest\x12\x96\x01\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tBw\x92At2JOptional application-specific ID useful for correlating logs for analysis.J&\"c2db17b8-4f9f-4fb1-acfd-9162a02be42b\"R\trequestId\x12k\n" +
	"\x06action\x18\x02 \x01(\tBS\x92AC22Action to be applied to each resource in the list.J\r\"view:public\"\xe0A\x02\xbaH\a\xc8\x01\x01r\x02\x10\x01R\x06action\x12D\n" +
	"\tprincipal\x18\x03 \x01(\v2\x1b.cerbos.engine.v1.PrincipalB\t\xe0A\x02\xbaH\x03\xc8\x01\x01R\tprincipal\x12T\n" +
	"\bresource\x18\x04 \x01(\v2-.cerbos.engine.v1.PlanResourcesInput.ResourceB\t\xe0A\x02\xbaH\x03\xc8\x01\x01R\bresource\x12:\n" +
	"\baux_data\x18\x05 \x01(\v2\x1a.cerbos.request.v1.AuxDataB\x03\xe0A\x01R\aauxData\x12c\n" +
	"\finclude_meta\x18\x06 \x01(\bB@\x92A=2;Opt to receive request processing metadata in the response.R\vincludeMeta:'\x92A$\n" +
	"\"2 PDP Resources Query Plan Request\"\x86\x05\n" +
	"\x17CheckResourceSetRequest\x12\x96\x01\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tBw\x92At2JOptional application-specific ID useful for correlating logs for analysis.J&\"c2db17b8-4f9f-4fb1-acfd-9162a02be42b\"R\trequestId\x12\x8f\x01\n" +
	"\aactions\x18\x02 \x03(\tBu\x92A\\28List of actions being performed on the set of resources.J\x1a[\"view:public\", \"comment\"]\xa8\x01\x01\xb0\x01\x01\xe0A\x02\xbaH\x10\xc8\x01\x01\x92\x01\n" +
	"\b\x01\x18\x01\"\x04r\x02\x10\x01R\aactions\x12D\n" +
	"\tprincipal\x18\x03 \x01(\v2\x1b.cerbos.engine.v1.PrincipalB\t\xe0A\x02\xbaH\x03\xc8\x01\x01R\tprincipal\x12E\n" +
	"\bresource\x18\x04 \x01(\v2\x1e.cerbos.request.v1.ResourceSetB\t\xe0A\x02\xbaH\x03\xc8\x01\x01R\bresource\x12c\n" +
	"\finclude_meta\x18\x05 \x01(\bB@\x92A=2;Opt to receive request processing metadata in the response.R\vincludeMeta\x12:\n" +
	"\baux_data\x18\x06 \x01(\v2\x1a.cerbos.request.v1.AuxDataB\x03\xe0A\x01R\aauxData:\x12\x92A\x0f\n" +
	"\r2\vPDP Request\"\xac\b\n" +
	"\vResourceSet\x12D\n" +
	"\x04kind\x18\x01 \x01(\tB0\x92A 2\x0eResource kind.J\x0e\"album:object\"\xe0A\x02\xbaH\a\xc8\x01\x01r\x02\x10\x01R\x04kind\x12\xdc\x01\n" +
	"\x0epolicy_version\x18\x02 \x01(\tB\xb4\x01\x92A\x99\x012|The policy version to use to evaluate this request. If not specified, will default to the server-configured default version.J\t\"default\"\x8a\x01\r^[[:word:]]*$\xe0A\x01\xbaH\x11r\x0f2\r^[[:word:]]*$R\rpolicyVersion\x12\xec\x02\n" +
	"\tinstances\x18\x03 \x03(\v2-.cerbos.request.v1.ResourceSet.InstancesEntryB\x9e\x02\x92A\x8c\x022mSet of resource instances to check. Each instance must be keyed by an application-specific unique identifier.J\x97\x01{\"XX125\":{\"attr\":{\"owner\":\"bugs_bunny\", \"public\": false, \"flagged\": false}}, \"XX225\":{\"attr\":{\"owner\":\"daffy_duck\", \"public\": true, \"flagged\": false}}}\xc8\x01\x01\xe0A\x02\xbaH\b\xc8\x01\x01\x9a\x01\x02\b\x01R\tinstances\x12\x86\x02\n" +
	"\x05scope\x18\x04 \x01(\tB\xef\x01\x92A\xb2\x012~A dot-separated scope that describes the hierarchy these resources belong to. This is used for determining policy inheritance.\x8a\x01/^([[:alnum:]][[:word:]\\-]*(\\.[[:word:]\\-]*)*)*$\xe0A\x01\xbaH3r12/^([[:alnum:]][[:word:]\\-]*(\\.[[:word:]\\-]*)*)*$R\x05scope\x1a^\n" +
	"\x0eInstancesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .cerbos.request.v1.AttributesMapR\x05value:\x028\x01: \x92A\x1d\n" +
	"\x1b2\x19Set of resources to check\"\xc1\x02\n" +
	"\rAttributesMap\x12\xa9\x01\n" +
	"\x04attr\x18\x01 \x03(\v2*.cerbos.request.v1.AttributesMap.AttrEntryBi\x92Af2dKey-value pairs of contextual data about this instance that should be used during policy evaluation.R\x04attr\x1aO\n" +
	"\tAttrEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.google.protobuf.ValueR\x05value:\x028\x01:3\x92A0\n" +
	".2,Unique identifier for the resource instance.\"\xe3\x06\n" +
	"\x19CheckResourceBatchRequest\x12\x96\x01\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tBw\x92At2JOptional application-specific ID useful for correlating logs for analysis.J&\"c2db17b8-4f9f-4fb1-acfd-9162a02be42b\"R\trequestId\x12D\n" +
	"\tprincipal\x18\x02 \x01(\v2\x1b.cerbos.engine.v1.PrincipalB\t\xe0A\x02\xbaH\x03\xc8\x01\x01R\tprincipal\x12\xbf\x02\n" +
	"\tresources\x18\x03 \x03(\v27.cerbos.request.v1.CheckResourceBatchRequest.BatchEntryB\xe7\x01\x92A\xd5\x012\x1eList of resources and actions.J\xac\x01[{\"actions\":[\"view\",\"comment\"], \"resource\":{\"kind\":\"album:object\",\"policyVersion\":\"default\",\"id\":\"XX125\",\"attr\":{\"owner\":\"bugs_bunny\", \"public\": false, \"flagged\": false}}}]\xa8\x01\x01\xb0\x01\x01\xe0A\x02\xbaH\b\xc8\x01\x01\x92\x01\x02\b\x01R\tresources\x125\n" +
	"\baux_data\x18\x04 \x01(\v2\x1a.cerbos.request.v1.AuxDataR\aauxData\x1a\xd9\x01\n" +
	"\n" +
	"BatchEntry\x12\x87\x01\n" +
	"\aactions\x18\x01 \x03(\tBm\x92AT20List of actions being performed on the resource.J\x1a[\"view:public\", \"comment\"]\xa8\x01\x01\xb0\x01\x01\xe0A\x02\xbaH\x10\xc8\x01\x01\x92\x01\n" +
	"\b\x01\x18\x01\"\x04r\x02\x10\x01R\aactions\x12A\n" +
	"\bresource\x18\x02 \x01(\v2\x1a.cerbos.engine.v1.ResourceB\t\xe0A\x02\xbaH\x03\xc8\x01\x01R\bresource:\x12\x92A\x0f\n" +
	"\r2\vPDP Request\"\xc7\a\n" +
	"\x15CheckResourcesRequest\x12\x96\x01\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tBw\x92At2JOptional application-specific ID useful for correlating logs for analysis.J&\"c2db17b8-4f9f-4fb1-acfd-9162a02be42b\"R\trequestId\x12X\n" +
	"\finclude_meta\x18\x02 \x01(\bB5\x92A220Add request processing metadata to the response.R\vincludeMeta\x12D\n" +
	"\tprincipal\x18\x03 \x01(\v2\x1b.cerbos.engine.v1.PrincipalB\t\xe0A\x02\xbaH\x03\xc8\x01\x01R\tprincipal\x12\xbe\x02\n" +
	"\tresources\x18\x04 \x03(\v26.cerbos.request.v1.CheckResourcesRequest.ResourceEntryB\xe7\x01\x92A\xd5\x012\x1eList of resources and actions.J\xac\x01[{\"actions\":[\"view\",\"comment\"], \"resource\":{\"kind\":\"album:object\",\"policyVersion\":\"default\",\"id\":\"XX125\",\"attr\":{\"owner\":\"bugs_bunny\", \"public\": false, \"flagged\": false}}}]\xa8\x01\x01\xb0\x01\x01\xe0A\x02\xbaH\b\xc8\x01\x01\x92\x01\x02\b\x01R\tresources\x125\n" +
	"\baux_data\x18\x05 \x01(\v2\x1a.cerbos.request.v1.AuxDataR\aauxData\x1a\xdc\x01\n" +
	"\rResourceEntry\x12\x87\x01\n" +
	"\aactions\x18\x01 \x03(\tBm\x92AT20List of actions being performed on the resource.J\x1a[\"view:public\", \"comment\"]\xa8\x01\x01\xb0\x01\x01\xe0A\x02\xbaH\x10\xc8\x01\x01\x92\x01\n" +
	"\b\x01\x18\x01\"\x04r\x02\x10\x01R\aactions\x12A\n" +
	"\bresource\x18\x02 \x01(\v2\x1a.cerbos.engine.v1.ResourceB\t\xe0A\x02\xbaH\x03\xc8\x01\x01R\bresource:\x1e\x92A\x1b\n" +
	"\x192\x17Check resources request\"\xb2\a\n" +
	"\aAuxData\x120\n" +
	"\x03jwt\x18\x01 \x01(\v2\x1e.cerbos.request.v1.AuxData.JWTR\x03jwt\x1a\xb0\x06\n" +
	"\x03JWT\x12\xc7\x04\n" +
	"\x05token\x18\x01 \x01(\tB\xb0\x04\x92A\x9f\x042\x1dJWT from the original requestJ\xc9\x03\"eyJhbGciOiJFUzM4NCIsImtpZCI6IjE5TGZaYXRFZGc4M1lOYzVyMjNndU1KcXJuND0iLCJ0eXAiOiJKV1QifQ.eyJhdWQiOlsiY2VyYm9zLWp3dC10ZXN0cyJdLCJjdXN0b21BcnJheSI6WyJBIiwiQiIsIkMiXSwiY3VzdG9tSW50Ijo0MiwiY3VzdG9tTWFwIjp7IkEiOiJBQSIsIkIiOiJCQiIsIkMiOiJDQyJ9LCJjdXN0b21TdHJpbmciOiJmb29iYXIiLCJleHAiOjE5NDk5MzQwMzksImlzcyI6ImNlcmJvcy10ZXN0LXN1aXRlIn0.WN_tOScSpd_EI-P5EI1YlagxEgExSfBjAtcrgcF6lyWj1lGpR_GKx9goZEp2p_t5AVWXN_bjz_sMUmJdJa4cVd55Qm1miR-FKu6oNRHnSEWdMFmnArwPw-YDJWfylLFX\"\x82\x03\x1a\n" +
	"\x14x-example-show-value\x12\x02 \x00\x82\x03\x14\n" +
	"\x0ex-fill-example\x12\x02 \x00\xe0A\x02\xbaH\a\xc8\x01\x01r\x02\x10\x01R\x05token\x12\xb8\x01\n" +
	"\n" +
	"key_set_id\x18\x02 \x01(\tB\x99\x01\x92A\x95\x012RKey ID to use when decoding the token (defined in the Cerbos server configuration)J\v\"my-keyset\"\x82\x03\x1a\n" +
	"\x14x-example-show-value\x12\x02 \x00\x82\x03\x14\n" +
	"\x0ex-fill-example\x12\x02 \x00R\bkeySetId:$\x92A!\n" +
	"\x1f2\x1dJWT from the original request:B\x92A?\n" +
	"=2;Structured auxiliary data useful for evaluating the request\"a\n" +
	"\x04File\x12*\n" +
	"\tfile_name\x18\x01 \x01(\tB\r\xe0A\x02\xbaH\a\xc8\x01\x01r\x02\x10\x01R\bfileName\x12-\n" +
	"\bcontents\x18\x02 \x01(\fB\x11\xe0A\x02\xbaH\v\xc8\x01\x01z\x06\x10\x01\x18\x80\x80@R\bcontents\"\xbe\x01\n" +
	"\x19PlaygroundValidateRequest\x12#\n" +
	"\rplayground_id\x18\x01 \x01(\tR\fplaygroundId\x12X\n" +
	"\x05files\x18\x02 \x03(\v2\x17.cerbos.request.v1.FileB)\x92A\x162\x0eList of files.\xa0\x01\x1e\xa8\x01\x01\xe0A\x02\xbaH\n" +
	"\xc8\x01\x01\x92\x01\x04\b\x01\x10\x1eR\x05files:\"\x92A\x1f\n" +
	"\x1d2\x1bPlayground validate request\"\xb6\x01\n" +
	"\x15PlaygroundTestRequest\x12#\n" +
	"\rplayground_id\x18\x01 \x01(\tR\fplaygroundId\x12X\n" +
	"\x05files\x18\x02 \x03(\v2\x17.cerbos.request.v1.FileB)\x92A\x162\x0eList of files.\xa0\x01\x1e\xa8\x01\x01\xe0A\x02\xbaH\n" +
	"\xc8\x01\x01\x92\x01\x04\b\x01\x10\x1eR\x05files:\x1e\x92A\x1b\n" +
	"\x192\x17Playground test request\"\xf0\x03\n" +
	"\x19PlaygroundEvaluateRequest\x12#\n" +
	"\rplayground_id\x18\x01 \x01(\tR\fplaygroundId\x12X\n" +
	"\x05files\x18\x02 \x03(\v2\x17.cerbos.request.v1.FileB)\x92A\x162\x0eList of files.\xa0\x01\x1e\xa8\x01\x01\xe0A\x02\xbaH\n" +
	"\xc8\x01\x01\x92\x01\x04\b\x01\x10\x1eR\x05files\x12D\n" +
	"\tprincipal\x18\x03 \x01(\v2\x1b.cerbos.engine.v1.PrincipalB\t\xe0A\x02\xbaH\x03\xc8\x01\x01R\tprincipal\x12A\n" +
	"\bresource\x18\x04 \x01(\v2\x1a.cerbos.engine.v1.ResourceB\t\xe0A\x02\xbaH\x03\xc8\x01\x01R\bresource\x12p\n" +
	"\aactions\x18\x05 \x03(\tBV\x92A;20List of actions being performed on the resource.\xa0\x012\xa8\x01\x01\xb0\x01\x01\xe0A\x02\xbaH\x12\xc8\x01\x01\x92\x01\f\b\x01\x102\x18\x01\"\x04r\x02\x10\x01R\aactions\x125\n" +
	"\baux_data\x18\x06 \x01(\v2\x1a.cerbos.request.v1.AuxDataR\aauxData:\"\x92A\x1f\n" +
	"\x1d2\x1bPlayground evaluate request\"\xb5\x04\n" +
	"\x16PlaygroundProxyRequest\x12#\n" +
	"\rplayground_id\x18\x01 \x01(\tR\fplaygroundId\x12X\n" +
	"\x05files\x18\x02 \x03(\v2\x17.cerbos.request.v1.FileB)\x92A\x162\x0eList of files.\xa0\x01\x1e\xa8\x01\x01\xe0A\x02\xbaH\n" +
	"\xc8\x01\x01\x92\x01\x04\b\x01\x10\x1eR\x05files\x12Z\n" +
	"\x12check_resource_set\x18\x03 \x01(\v2*.cerbos.request.v1.CheckResourceSetRequestH\x00R\x10checkResourceSet\x12`\n" +
	"\x14check_resource_batch\x18\x04 \x01(\v2,.cerbos.request.v1.CheckResourceBatchRequestH\x00R\x12checkResourceBatch\x12P\n" +
	"\x0eplan_resources\x18\x05 \x01(\v2'.cerbos.request.v1.PlanResourcesRequestH\x00R\rplanResources\x12S\n" +
	"\x0fcheck_resources\x18\x06 \x01(\v2(.cerbos.request.v1.CheckResourcesRequestH\x00R\x0echeckResources:\x1f\x92A\x1c\n" +
	"\x1a2\x18Playground proxy requestB\x16\n" +
	"\rproxy_request\x12\x05\xbaH\x02\b\x01\"\xa0\x01\n" +
	"\x18AddOrUpdatePolicyRequest\x12b\n" +
	"\bpolicies\x18\x01 \x03(\v2\x18.cerbos.policy.v1.PolicyB,\x92A\x192\x11List of policies.\xa0\x01d\xa8\x01\x01\xe0A\x02\xbaH\n" +
	"\xc8\x01\x01\x92\x01\x04\b\x01\x10dR\bpolicies: \x92A\x1d\n" +
	"\x1b2\x19Add/update policy request\"\xac\a\n" +
	"\x1aListAuditLogEntriesRequest\x12\x89\x01\n" +
	"\x04kind\x18\x01 \x01(\x0e22.cerbos.request.v1.ListAuditLogEntriesRequest.KindBA\x92A12\x11Kind of log entry\xf2\x02\vKIND_ACCESS\xf2\x02\rKIND_DECISION\xbaH\n" +
	"\xc8\x01\x01\x82\x01\x04\x18\x01\x18\x02R\x04kind\x12F\n" +
	"\x04tail\x18\x02 \x01(\rB0\x92A#2\x0fLast N entries.Y\x00\x00\x00\x00\x00@\x8f@i\x00\x00\x00\x00\x00\x00\xf0?\xbaH\a*\x05\x18\xe8\a(\x01H\x00R\x04tail\x12S\n" +
	"\abetween\x18\x03 \x01(\v27.cerbos.request.v1.ListAuditLogEntriesRequest.TimeRangeH\x00R\abetween\x12Y\n" +
	"\x05since\x18\x04 \x01(\v2\x19.google.protobuf.DurationB&\x92A#2!Entries since N hours/minutes agoH\x00R\x05since\x12\x83\x01\n" +
	"\x06lookup\x18\x05 \x01(\tBi\x92A72\n" +
	"By Call ID\x8a\x01(^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$\xbaH,r*2(^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{26}$H\x00R\x06lookup\x1a\xb0\x02\n" +
	"\tTimeRange\x12\x80\x01\n" +
	"\x05start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampBN\x92A=2\x1eStart date in ISO 8601 format.J\x1b\"2021-07-05T07:27:01+00:00\"\xe0A\x02\xbaH\b\xc8\x01\x01\xb2\x01\x028\x01R\x05start\x12z\n" +
	"\x03end\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampBL\x92A;2\x1cEnd date in ISO 8601 format.J\x1b\"2021-07-05T07:27:01+00:00\"\xe0A\x02\xbaH\b\xc8\x01\x01\xb2\x01\x028\x01R\x03end:$\x92A!\n" +
	"\x1f2\x1dEntries between a time range.\"@\n" +
	"\x04Kind\x12\x14\n" +
	"\x10KIND_UNSPECIFIED\x10\x00\x12\x0f\n" +
	"\vKIND_ACCESS\x10\x01\x12\x11\n" +
	"\rKIND_DECISION\x10\x02B\x0f\n" +
	"\x06filter\x12\x05\xbaH\x02\b\x01\"/\n" +
	"\x11ServerInfoRequest:\x1a\x92A\x17\n" +
	"\x152\x13Server info request\"\xd3\x04\n" +
	"\x13ListPoliciesRequest\x12L\n" +
	"\x10include_disabled\x18\x01 \x01(\bB!\x92A\x1b2\x19Include disabled policies\xe0A\x01R\x0fincludeDisabled\x12L\n" +
	"\vname_regexp\x18\x02 \x01(\tB+\x92A%2#Filter policies by name with regexp\xe0A\x01R\n" +
	"nameRegexp\x12O\n" +
	"\fscope_regexp\x18\x03 \x01(\tB,\x92A&2$Filter policies by scope with regexp\xe0A\x01R\vscopeRegexp\x12U\n" +
	"\x0eversion_regexp\x18\x04 \x01(\tB.\x92A(2&Filter policies by version with regexp\xe0A\x01R\rversionRegexp\x12\xd9\x01\n" +
	"\tpolicy_id\x18\x05 \x03(\tB\xbb\x01\x92A\xa6\x012\x87\x01For blob, disk, git stores use file name (<filename>.yaml). For mysql, postgres, sqlite3 use id (<kind>.<name>.<version>) of the policyJ\x1a\"principal.sarah.vdefault\"\xe0A\x01\xbaH\v\x92\x01\b\x10\x19\"\x04r\x02\x10\x01R\bpolicyId:\x1c\x92A\x19\n" +
	"\x172\x15List policies request\"\x81\x02\n" +
	"\x10GetPolicyRequest\x12\xd1\x01\n" +
	"\x02id\x18\x01 \x03(\tB\xc0\x01\x92A\xa6\x012\x87\x01For blob, disk, git stores use file name (<filename>.yaml). For mysql, postgres, sqlite3 use id (<kind>.<name>.<version>) of the policyJ\x1a\"principal.sarah.vdefault\"\xe0A\x02\xbaH\x10\xc8\x01\x01\x92\x01\n" +
	"\b\x01\x18\x01\"\x04r\x02\x10\x01R\x02id:\x19\x92A\x16\n" +
	"\x142\x12Get policy request\"\x9e\x01\n" +
	"\x14DisablePolicyRequest\x12g\n" +
	"\x02id\x18\x01 \x03(\tBW\x92A>2 Unique identifier for the policyJ\x1a\"principal.sarah.vdefault\"\xe0A\x02\xbaH\x10\xc8\x01\x01\x92\x01\n" +
	"\b\x01\x18\x01\"\x04r\x02\x10\x01R\x02id:\x1d\x92A\x1a\n" +
	"\x182\x16Disable policy request\"\x9c\x01\n" +
	"\x13EnablePolicyRequest\x12g\n" +
	"\x02id\x18\x01 \x03(\tBW\x92A>2 Unique identifier for the policyJ\x1a\"principal.sarah.vdefault\"\xe0A\x02\xbaH\x10\xc8\x01\x01\x92\x01\n" +
	"\b\x01\x18\x01\"\x04r\x02\x10\x01R\x02id:\x1c\x92A\x19\n" +
	"\x172\x15Enable policy request\"\xd9\x04\n" +
	"\x16InspectPoliciesRequest\x12L\n" +
	"\x10include_disabled\x18\x01 \x01(\bB!\x92A\x1b2\x19Include disabled policies\xe0A\x01R\x0fincludeDisabled\x12L\n" +
	"\vname_regexp\x18\x02 \x01(\tB+\x92A%2#Filter policies by name with regexp\xe0A\x01R\n" +
	"nameRegexp\x12O\n" +
	"\fscope_regexp\x18\x03 \x01(\tB,\x92A&2$Filter policies by scope with regexp\xe0A\x01R\vscopeRegexp\x12U\n" +
	"\x0eversion_regexp\x18\x04 \x01(\tB.\x92A(2&Filter policies by version with regexp\xe0A\x01R\rversionRegexp\x12\xd9\x01\n" +
	"\tpolicy_id\x18\x05 \x03(\tB\xbb\x01\x92A\xa6\x012\x87\x01For blob, disk, git stores use file name (<filename>.yaml). For mysql, postgres, sqlite3 use id (<kind>.<name>.<version>) of the policyJ\x1a\"principal.sarah.vdefault\"\xe0A\x01\xbaH\v\x92\x01\b\x10\x19\"\x04r\x02\x10\x01R\bpolicyId:\x1f\x92A\x1c\n" +
	"\x1a2\x18Inspect policies request\"\x9d\x01\n" +
	"\x18AddOrUpdateSchemaRequest\x12_\n" +
	"\aschemas\x18\x01 \x03(\v2\x18.cerbos.schema.v1.SchemaB+\x92A\x182\x10List of schemas.\xa0\x01d\xa8\x01\x01\xe0A\x02\xbaH\n" +
	"\xc8\x01\x01\x92\x01\x04\b\x01\x10dR\aschemas: \x92A\x1d\n" +
	"\x1b2\x19Add/update schema request\"4\n" +
	"\x12ListSchemasRequest:\x1e\x92A\x1b\n" +
	"\x192\x17List schema ids request\"\x92\x01\n" +
	"\x10GetSchemaRequest\x12`\n" +
	"\x02id\x18\x01 \x03(\tBP\x92A42 Unique identifier for the schemaJ\x10\"principal.json\"\xe0A\x02\xbaH\x13\xc8\x01\x01\x92\x01\r\b\x01\x18\x01\"\ar\x05\x10\x01\x18\xff\x01R\x02id:\x1c\x92A\x19\n" +
	"\x172\x15Get schema(s) request\"\x98\x01\n" +
	"\x13DeleteSchemaRequest\x12`\n" +
	"\x02id\x18\x01 \x03(\tBP\x92A42 Unique identifier for the schemaJ\x10\"principal.json\"\xe0A\x02\xbaH\x13\xc8\x01\x01\x92\x01\r\b\x01\x18\x01\"\ar\x05\x10\x01\x18\xff\x01R\x02id:\x1f\x92A\x1c\n" +
	"\x1a2\x18Delete schema(s) request\"x\n" +
	"\x12ReloadStoreRequest\x12E\n" +
	"\x04wait\x18\x01 \x01(\bB1\x92A+2)Wait until the reloading process finishes\xe0A\x01R\x04wait:\x1b\x92A\x18\n" +
	"\x162\x14Reload store requestBs\n" +
	"\x19dev.cerbos.api.v1.requestZ>github.com/cerbos/cerbos/api/genpb/cerbos/request/v1;requestv1\xaa\x02\x15Cerbos.Api.V1.Requestb\x06proto3"

var (
	file_cerbos_request_v1_request_proto_rawDescOnce sync.Once
	file_cerbos_request_v1_request_proto_rawDescData []byte
)

func file_cerbos_request_v1_request_proto_rawDescGZIP() []byte {
	file_cerbos_request_v1_request_proto_rawDescOnce.Do(func() {
		file_cerbos_request_v1_request_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cerbos_request_v1_request_proto_rawDesc), len(file_cerbos_request_v1_request_proto_rawDesc)))
	})
	return file_cerbos_request_v1_request_proto_rawDescData
}

var file_cerbos_request_v1_request_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cerbos_request_v1_request_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_cerbos_request_v1_request_proto_goTypes = []any{
	(ListAuditLogEntriesRequest_Kind)(0),         // 0: cerbos.request.v1.ListAuditLogEntriesRequest.Kind
	(*PlanResourcesRequest)(nil),                 // 1: cerbos.request.v1.PlanResourcesRequest
	(*CheckResourceSetRequest)(nil),              // 2: cerbos.request.v1.CheckResourceSetRequest
	(*ResourceSet)(nil),                          // 3: cerbos.request.v1.ResourceSet
	(*AttributesMap)(nil),                        // 4: cerbos.request.v1.AttributesMap
	(*CheckResourceBatchRequest)(nil),            // 5: cerbos.request.v1.CheckResourceBatchRequest
	(*CheckResourcesRequest)(nil),                // 6: cerbos.request.v1.CheckResourcesRequest
	(*AuxData)(nil),                              // 7: cerbos.request.v1.AuxData
	(*File)(nil),                                 // 8: cerbos.request.v1.File
	(*PlaygroundValidateRequest)(nil),            // 9: cerbos.request.v1.PlaygroundValidateRequest
	(*PlaygroundTestRequest)(nil),                // 10: cerbos.request.v1.PlaygroundTestRequest
	(*PlaygroundEvaluateRequest)(nil),            // 11: cerbos.request.v1.PlaygroundEvaluateRequest
	(*PlaygroundProxyRequest)(nil),               // 12: cerbos.request.v1.PlaygroundProxyRequest
	(*AddOrUpdatePolicyRequest)(nil),             // 13: cerbos.request.v1.AddOrUpdatePolicyRequest
	(*ListAuditLogEntriesRequest)(nil),           // 14: cerbos.request.v1.ListAuditLogEntriesRequest
	(*ServerInfoRequest)(nil),                    // 15: cerbos.request.v1.ServerInfoRequest
	(*ListPoliciesRequest)(nil),                  // 16: cerbos.request.v1.ListPoliciesRequest
	(*GetPolicyRequest)(nil),                     // 17: cerbos.request.v1.GetPolicyRequest
	(*DisablePolicyRequest)(nil),                 // 18: cerbos.request.v1.DisablePolicyRequest
	(*EnablePolicyRequest)(nil),                  // 19: cerbos.request.v1.EnablePolicyRequest
	(*InspectPoliciesRequest)(nil),               // 20: cerbos.request.v1.InspectPoliciesRequest
	(*AddOrUpdateSchemaRequest)(nil),             // 21: cerbos.request.v1.AddOrUpdateSchemaRequest
	(*ListSchemasRequest)(nil),                   // 22: cerbos.request.v1.ListSchemasRequest
	(*GetSchemaRequest)(nil),                     // 23: cerbos.request.v1.GetSchemaRequest
	(*DeleteSchemaRequest)(nil),                  // 24: cerbos.request.v1.DeleteSchemaRequest
	(*ReloadStoreRequest)(nil),                   // 25: cerbos.request.v1.ReloadStoreRequest
	nil,                                          // 26: cerbos.request.v1.ResourceSet.InstancesEntry
	nil,                                          // 27: cerbos.request.v1.AttributesMap.AttrEntry
	(*CheckResourceBatchRequest_BatchEntry)(nil), // 28: cerbos.request.v1.CheckResourceBatchRequest.BatchEntry
	(*CheckResourcesRequest_ResourceEntry)(nil),  // 29: cerbos.request.v1.CheckResourcesRequest.ResourceEntry
	(*AuxData_JWT)(nil),                          // 30: cerbos.request.v1.AuxData.JWT
	(*ListAuditLogEntriesRequest_TimeRange)(nil), // 31: cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange
	(*v1.Principal)(nil),                         // 32: cerbos.engine.v1.Principal
	(*v1.PlanResourcesInput_Resource)(nil),       // 33: cerbos.engine.v1.PlanResourcesInput.Resource
	(*v1.Resource)(nil),                          // 34: cerbos.engine.v1.Resource
	(*v11.Policy)(nil),                           // 35: cerbos.policy.v1.Policy
	(*durationpb.Duration)(nil),                  // 36: google.protobuf.Duration
	(*v12.Schema)(nil),                           // 37: cerbos.schema.v1.Schema
	(*structpb.Value)(nil),                       // 38: google.protobuf.Value
	(*timestamppb.Timestamp)(nil),                // 39: google.protobuf.Timestamp
}
var file_cerbos_request_v1_request_proto_depIdxs = []int32{
	32, // 0: cerbos.request.v1.PlanResourcesRequest.principal:type_name -> cerbos.engine.v1.Principal
	33, // 1: cerbos.request.v1.PlanResourcesRequest.resource:type_name -> cerbos.engine.v1.PlanResourcesInput.Resource
	7,  // 2: cerbos.request.v1.PlanResourcesRequest.aux_data:type_name -> cerbos.request.v1.AuxData
	32, // 3: cerbos.request.v1.CheckResourceSetRequest.principal:type_name -> cerbos.engine.v1.Principal
	3,  // 4: cerbos.request.v1.CheckResourceSetRequest.resource:type_name -> cerbos.request.v1.ResourceSet
	7,  // 5: cerbos.request.v1.CheckResourceSetRequest.aux_data:type_name -> cerbos.request.v1.AuxData
	26, // 6: cerbos.request.v1.ResourceSet.instances:type_name -> cerbos.request.v1.ResourceSet.InstancesEntry
	27, // 7: cerbos.request.v1.AttributesMap.attr:type_name -> cerbos.request.v1.AttributesMap.AttrEntry
	32, // 8: cerbos.request.v1.CheckResourceBatchRequest.principal:type_name -> cerbos.engine.v1.Principal
	28, // 9: cerbos.request.v1.CheckResourceBatchRequest.resources:type_name -> cerbos.request.v1.CheckResourceBatchRequest.BatchEntry
	7,  // 10: cerbos.request.v1.CheckResourceBatchRequest.aux_data:type_name -> cerbos.request.v1.AuxData
	32, // 11: cerbos.request.v1.CheckResourcesRequest.principal:type_name -> cerbos.engine.v1.Principal
	29, // 12: cerbos.request.v1.CheckResourcesRequest.resources:type_name -> cerbos.request.v1.CheckResourcesRequest.ResourceEntry
	7,  // 13: cerbos.request.v1.CheckResourcesRequest.aux_data:type_name -> cerbos.request.v1.AuxData
	30, // 14: cerbos.request.v1.AuxData.jwt:type_name -> cerbos.request.v1.AuxData.JWT
	8,  // 15: cerbos.request.v1.PlaygroundValidateRequest.files:type_name -> cerbos.request.v1.File
	8,  // 16: cerbos.request.v1.PlaygroundTestRequest.files:type_name -> cerbos.request.v1.File
	8,  // 17: cerbos.request.v1.PlaygroundEvaluateRequest.files:type_name -> cerbos.request.v1.File
	32, // 18: cerbos.request.v1.PlaygroundEvaluateRequest.principal:type_name -> cerbos.engine.v1.Principal
	34, // 19: cerbos.request.v1.PlaygroundEvaluateRequest.resource:type_name -> cerbos.engine.v1.Resource
	7,  // 20: cerbos.request.v1.PlaygroundEvaluateRequest.aux_data:type_name -> cerbos.request.v1.AuxData
	8,  // 21: cerbos.request.v1.PlaygroundProxyRequest.files:type_name -> cerbos.request.v1.File
	2,  // 22: cerbos.request.v1.PlaygroundProxyRequest.check_resource_set:type_name -> cerbos.request.v1.CheckResourceSetRequest
	5,  // 23: cerbos.request.v1.PlaygroundProxyRequest.check_resource_batch:type_name -> cerbos.request.v1.CheckResourceBatchRequest
	1,  // 24: cerbos.request.v1.PlaygroundProxyRequest.plan_resources:type_name -> cerbos.request.v1.PlanResourcesRequest
	6,  // 25: cerbos.request.v1.PlaygroundProxyRequest.check_resources:type_name -> cerbos.request.v1.CheckResourcesRequest
	35, // 26: cerbos.request.v1.AddOrUpdatePolicyRequest.policies:type_name -> cerbos.policy.v1.Policy
	0,  // 27: cerbos.request.v1.ListAuditLogEntriesRequest.kind:type_name -> cerbos.request.v1.ListAuditLogEntriesRequest.Kind
	31, // 28: cerbos.request.v1.ListAuditLogEntriesRequest.between:type_name -> cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange
	36, // 29: cerbos.request.v1.ListAuditLogEntriesRequest.since:type_name -> google.protobuf.Duration
	37, // 30: cerbos.request.v1.AddOrUpdateSchemaRequest.schemas:type_name -> cerbos.schema.v1.Schema
	4,  // 31: cerbos.request.v1.ResourceSet.InstancesEntry.value:type_name -> cerbos.request.v1.AttributesMap
	38, // 32: cerbos.request.v1.AttributesMap.AttrEntry.value:type_name -> google.protobuf.Value
	34, // 33: cerbos.request.v1.CheckResourceBatchRequest.BatchEntry.resource:type_name -> cerbos.engine.v1.Resource
	34, // 34: cerbos.request.v1.CheckResourcesRequest.ResourceEntry.resource:type_name -> cerbos.engine.v1.Resource
	39, // 35: cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.start:type_name -> google.protobuf.Timestamp
	39, // 36: cerbos.request.v1.ListAuditLogEntriesRequest.TimeRange.end:type_name -> google.protobuf.Timestamp
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_cerbos_request_v1_request_proto_init() }
func file_cerbos_request_v1_request_proto_init() {
	if File_cerbos_request_v1_request_proto != nil {
		return
	}
	file_cerbos_request_v1_request_proto_msgTypes[11].OneofWrappers = []any{
		(*PlaygroundProxyRequest_CheckResourceSet)(nil),
		(*PlaygroundProxyRequest_CheckResourceBatch)(nil),
		(*PlaygroundProxyRequest_PlanResources)(nil),
		(*PlaygroundProxyRequest_CheckResources)(nil),
	}
	file_cerbos_request_v1_request_proto_msgTypes[13].OneofWrappers = []any{
		(*ListAuditLogEntriesRequest_Tail)(nil),
		(*ListAuditLogEntriesRequest_Between)(nil),
		(*ListAuditLogEntriesRequest_Since)(nil),
		(*ListAuditLogEntriesRequest_Lookup)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cerbos_request_v1_request_proto_rawDesc), len(file_cerbos_request_v1_request_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cerbos_request_v1_request_proto_goTypes,
		DependencyIndexes: file_cerbos_request_v1_request_proto_depIdxs,
		EnumInfos:         file_cerbos_request_v1_request_proto_enumTypes,
		MessageInfos:      file_cerbos_request_v1_request_proto_msgTypes,
	}.Build()
	File_cerbos_request_v1_request_proto = out.File
	file_cerbos_request_v1_request_proto_goTypes = nil
	file_cerbos_request_v1_request_proto_depIdxs = nil
}
