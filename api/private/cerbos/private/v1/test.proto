// Copyright 2021-2024 Zenauth Ltd.
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package cerbos.private.v1;

import "cerbos/audit/v1/audit.proto";
import "cerbos/engine/v1/engine.proto";
import "cerbos/policy/v1/policy.proto";
import "cerbos/request/v1/request.proto";
import "cerbos/response/v1/response.proto";
import "cerbos/runtime/v1/runtime.proto";
import "cerbos/schema/v1/schema.proto";
import "cerbos/source/v1/source.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/cerbos/cerbos/api/genpb/cerbos/private/v1;privatev1";

message EngineTestCase {
  string description = 1;
  repeated cerbos.engine.v1.CheckInput inputs = 2;
  repeated cerbos.engine.v1.CheckOutput want_outputs = 3;
  bool want_error = 4;
  repeated cerbos.audit.v1.DecisionLogEntry want_decision_logs = 5;
}

message ServerTestCase {
  message PlanResourcesCall {
    cerbos.request.v1.PlanResourcesRequest input = 1;
    cerbos.response.v1.PlanResourcesResponse want_response = 2;
  }

  message CheckResourceSetCall {
    cerbos.request.v1.CheckResourceSetRequest input = 1;
    cerbos.response.v1.CheckResourceSetResponse want_response = 2;
  }

  message CheckResourceBatchCall {
    cerbos.request.v1.CheckResourceBatchRequest input = 1;
    cerbos.response.v1.CheckResourceBatchResponse want_response = 2;
  }

  message CheckResourcesCall {
    cerbos.request.v1.CheckResourcesRequest input = 1;
    cerbos.response.v1.CheckResourcesResponse want_response = 2;
  }

  message PlaygroundValidateCall {
    cerbos.request.v1.PlaygroundValidateRequest input = 1;
    cerbos.response.v1.PlaygroundValidateResponse want_response = 2;
  }

  message PlaygroundTestCall {
    cerbos.request.v1.PlaygroundTestRequest input = 1;
    cerbos.response.v1.PlaygroundTestResponse want_response = 2;
  }

  message PlaygroundEvaluateCall {
    cerbos.request.v1.PlaygroundEvaluateRequest input = 1;
    cerbos.response.v1.PlaygroundEvaluateResponse want_response = 2;
  }

  message PlaygroundProxyCall {
    cerbos.request.v1.PlaygroundProxyRequest input = 1;
    cerbos.response.v1.PlaygroundProxyResponse want_response = 2;
  }

  message AdminAddOrUpdatePolicyCall {
    cerbos.request.v1.AddOrUpdatePolicyRequest input = 1;
    cerbos.response.v1.AddOrUpdatePolicyResponse want_response = 2;
  }

  message AdminAddOrUpdateSchemaCall {
    cerbos.request.v1.AddOrUpdateSchemaRequest input = 1;
    cerbos.response.v1.AddOrUpdateSchemaResponse want_response = 2;
  }

  message Status {
    uint32 http_status_code = 1;
    uint32 grpc_status_code = 2;
  }

  string name = 1;
  string description = 2;
  bool want_error = 3;
  Status want_status = 4;
  oneof call_kind {
    CheckResourceSetCall check_resource_set = 5;
    CheckResourceBatchCall check_resource_batch = 6;
    PlaygroundValidateCall playground_validate = 7;
    PlaygroundEvaluateCall playground_evaluate = 8;
    AdminAddOrUpdatePolicyCall admin_add_or_update_policy = 9;
    PlaygroundProxyCall playground_proxy = 10;
    PlanResourcesCall plan_resources = 11;
    AdminAddOrUpdateSchemaCall admin_add_or_update_schema = 12;
    PlaygroundTestCall playground_test = 13;
    CheckResourcesCall check_resources = 14;
  }
}

message IndexBuilderTestCase {
  message CompilationUnit {
    string main_fqn = 1;
    repeated string definition_fqns = 2;
    repeated string ancestor_fqns = 3;
  }

  map<string, string> files = 1;
  cerbos.runtime.v1.IndexBuildErrors want_err_list = 2;
  string want_err = 3;
  repeated CompilationUnit want_compilation_units = 4;
}

message CompileTestCase {
  message Variables {
    message DerivedRole {
      string name = 1;
      repeated string variables = 2;
    }

    string scope = 1;
    repeated string variables = 2;
    repeated DerivedRole derived_roles = 3;
  }

  string main_def = 1;
  repeated cerbos.runtime.v1.CompileErrors.Err want_errors = 2;
  repeated Variables want_variables = 3;
}

message CelTestCase {
  cerbos.policy.v1.Match condition = 1;
  cerbos.engine.v1.Request request = 2;
  bool want = 3;
  bool want_error = 4;
}

message SchemaTestCase {
  string description = 1;
  cerbos.policy.v1.Schemas schema_refs = 2;
  oneof input {
    cerbos.engine.v1.CheckInput check_input = 3;
    cerbos.engine.v1.PlanResourcesInput plan_resources_input = 4;
  }
  bool want_error = 5;
  repeated cerbos.schema.v1.ValidationError want_validation_errors = 6;
}

message ValidationErrContainer {
  repeated cerbos.schema.v1.ValidationError errors = 1;
}

message AttrWrapper {
  map<string, google.protobuf.Value> attr = 1;
}

message QueryPlannerTestSuite {
  string description = 1;
  cerbos.engine.v1.Principal principal = 2;
  message Test {
    string action = 1;
    cerbos.engine.v1.PlanResourcesFilter want = 2;
    cerbos.engine.v1.PlanResourcesInput.Resource resource = 3;
    bool want_err = 4;
  }
  repeated Test tests = 3;
}

message VerifyTestFixtureGetTestsTestCase {
  cerbos.policy.v1.TestTable table = 1;
  repeated cerbos.policy.v1.Test want_tests = 2;
  string want_err = 3;
}

message QueryPlannerFilterTestCase {
  string description = 1;
  cerbos.engine.v1.PlanResourcesFilter input = 2;
  cerbos.engine.v1.PlanResourcesFilter want_filter = 3;
  string want_string = 4;
}

message VerifyTestCase {
  string description = 1;
  bool want_err = 2;
  cerbos.policy.v1.TestResults want = 3;
}

message ProtoYamlTestCase {
  message Want {
    cerbos.policy.v1.Policy message = 1;
    repeated cerbos.source.v1.Error errors = 2;
  }
  string description = 1;
  repeated Want want = 2;
  repeated cerbos.source.v1.Error want_errors = 3;
}

// Taken from
// https://github.com/bufbuild/protobuf-conformance/blob/main/proto/google/protobuf/test_messages_proto3.proto
message WellKnownTypes {
  message Nested {
    string string_field = 1;
    google.protobuf.Value value_field = 2;
  }

  google.protobuf.BoolValue bool_wrapper = 1;
  google.protobuf.Int32Value int32_wrapper = 2;
  google.protobuf.Int64Value int64_wrapper = 3;
  google.protobuf.UInt32Value uint32_wrapper = 4;
  google.protobuf.UInt64Value uint64_wrapper = 5;
  google.protobuf.FloatValue float_wrapper = 6;
  google.protobuf.DoubleValue double_wrapper = 7;
  google.protobuf.StringValue string_wrapper = 8;
  google.protobuf.BytesValue bytes_wrapper = 9;

  repeated google.protobuf.BoolValue repeated_bool_wrapper = 10;
  repeated google.protobuf.Int32Value repeated_int32_wrapper = 11;
  repeated google.protobuf.Int64Value repeated_int64_wrapper = 12;
  repeated google.protobuf.UInt32Value repeated_uint32_wrapper = 13;
  repeated google.protobuf.UInt64Value repeated_uint64_wrapper = 14;
  repeated google.protobuf.FloatValue repeated_float_wrapper = 15;
  repeated google.protobuf.DoubleValue repeated_double_wrapper = 16;
  repeated google.protobuf.StringValue repeated_string_wrapper = 17;
  repeated google.protobuf.BytesValue repeated_bytes_wrapper = 18;

  google.protobuf.Duration duration = 19;
  google.protobuf.Timestamp timestamp = 20;
  google.protobuf.Struct struct = 21;
  google.protobuf.Any any = 22;
  google.protobuf.Value value = 23;
  google.protobuf.NullValue null_value = 24;

  repeated google.protobuf.Duration repeated_duration = 25;
  repeated google.protobuf.Timestamp repeated_timestamp = 26;
  repeated google.protobuf.Struct repeated_struct = 27;
  repeated google.protobuf.Any repeated_any = 28;
  repeated google.protobuf.Value repeated_value = 29;
  repeated google.protobuf.ListValue repeated_list_value = 30;

  Nested optional_nested_msg = 31;
}
