---
name: CI
on:
  pull_request:
    branches:
      - main
      - 'v*'
jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      code: ${{ steps.filter.outputs.code }}
      docs: ${{ steps.filter.outputs.docs }}
      protos: ${{ steps.filter.outputs.protos }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            code:
              - '!(docs/**)'
            docs:
              - 'docs/**'
            protos:
              - '**/*.proto'

  generate:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    name: Generate
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x

      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/.cache/cerbos/bin
          key: generate-${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
          restore-keys: |
            generate-${{ runner.os }}-go-

      - name: Generate
        run: make generate

      - name: Check repo status
        run: |-
          REPO_STATUS="$(git status --porcelain)"
          if [[ ! -z $REPO_STATUS ]]; then
            echo "::error::Uncommitted changes detected"
            echo "$REPO_STATUS"
            exit 1
          fi

  download-test-times:
    name: Download test times
    runs-on: ubuntu-latest
    steps:
      - name: Download previous test times
        continue-on-error: true
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: pr-test.yaml
          name: test-times
          search_artifacts: true

      - name: Upload previous test times
        uses: actions/upload-artifact@v3
        with:
          name: previous-test-times
          path: test-times.json

  test:
    needs:
      - changes
      - download-test-times
    if: ${{ needs.changes.outputs.code == 'true' }}
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        split: [0, 1, 2, 3, 4, 5]
    outputs:
      job-total: ${{ strategy.job-total }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x

      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/.cache/cerbos/bin
          key: test-${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}-${{ strategy.job-index }}
          restore-keys: |
            test-${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}-
            test-${{ runner.os }}-go-

      - name: Download previous test times
        uses: actions/download-artifact@v3
        with:
          name: previous-test-times

      - name: Test
        run: make test-all TESTSPLIT_INDEX=${{ strategy.job-index }} TESTSPLIT_TOTAL=${{ strategy.job-total }}
        env:
          CERBOS_TEST_LOG_LEVEL: "debug"
          CERBOS_DEBUG_DB: "true"
          CERBOS_DEBUG_ENGINE: "true"

      - name: Upload JUnit reports
        uses: actions/upload-artifact@v3
        with:
          name: junit-reports-${{ strategy.job-index }}
          path: junit.*.xml

      - name: Upload to CodeCov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: "unit.cover,integration.cover"

  upload-test-times:
    needs: test
    name: Upload test times
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x

      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/.cache/cerbos/bin
          key: test-${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}-0

      - name: Download JUnit reports
        uses: actions/download-artifact@v3

      - name: Combine JUnit reports
        run: |-
          mv junit-reports-*/junit.*.xml .
          make test-times TESTSPLIT_TOTAL=${{ needs.test.outputs.job-total }}

      - name: Upload new test times
        uses: actions/upload-artifact@v3
        with:
          name: test-times
          path: test-times.json

  docs:
    needs: changes
    if: ${{ needs.changes.outputs.docs == 'true' }}
    name: Build docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate docs
        uses: ./.github/actions/antora-docs
        id: docs

  golangci:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.2.0
        with:
          version: latest
          args: '--config=.golangci.yaml -v'

  buf:
    needs: changes
    if: ${{ needs.changes.outputs.protos == 'true' }}
    name: Proto check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v1.5.0

      - name: Lint protos
        uses: bufbuild/buf-lint-action@v1.0.1

      - name: Check formatting
        run: buf format --diff --exit-code

      - name: Find latest release
        id: latest-release
        run: gh release view --json tagName --jq '"::set-output name=tag::\(.tagName)"'
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Check backwards compatibility
        uses: cerbos/buf-breaking-action@since
        with:
          against: https://github.com/cerbos/cerbos.git#tag=${{ steps.latest-release.outputs.tag }}
          since: https://github.com/cerbos/cerbos.git#branch=main
