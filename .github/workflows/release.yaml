---
name: Release
on:
  push:
    tags:
      - v*
jobs:
  releaseBinaries:
    name: Release Binaries
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GHCR
        run:  echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Login to Artifactory
        run:  echo "${{ secrets.ARTIFACTORY_PROD_SECRET }}" | docker login cerbos.jfrog.io -u ${{ secrets.ARTIFACTORY_PROD_USERNAME }} --password-stdin

      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/.cache/cerbos/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --config=.goreleaser-ci.yml --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACTORY_PROD_USERNAME: ${{ secrets.ARTIFACTORY_PROD_USERNAME }}
          ARTIFACTORY_PROD_SECRET: ${{ secrets.ARTIFACTORY_PROD_SECRET }}

  releaseProtos:
    name: Release Protobufs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v0.3.1

      - name: Push to BSR 
        uses: bufbuild/buf-push-action@v0.2.0
        with:
          branch: releases
          buf_token: ${{ secrets.BUF_TOKEN }}


  releaseDocs:
    name: Release Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - name: Generate docs
        uses: ./.github/actions/antora-docs
        id: docs

      - name: Upload docs
        run: curl -H "X-JFrog-Art-Api:${{ secrets.ARTIFACTORY_API_KEY }}" -T "docs/build/cerbos_docs.zip" "https://cerbos.jfrog.io/artifactory/binaries/cerbos_${GITHUB_REF/refs\/tags\//}_docs.zip"

      - name: Publish to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

  releaseHelm:
    name: Release Helm chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v1

      - name: Package Helm chart
        run: helm package -d deploy/out deploy/charts/cerbos

      - name: Upload Helm chart
        run: CHART=$(ls deploy/out/*.tgz); curl -H "X-JFrog-Art-Api:${{ secrets.ARTIFACTORY_API_KEY }}" -T "$CHART" "https://cerbos.jfrog.io/artifactory/helm/$(basename $CHART)"
