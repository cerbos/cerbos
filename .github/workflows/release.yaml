---
name: Release
on:
  push:
    tags:
      - v*
jobs:
  releaseBinaries:
    name: Release Binaries
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to JFrog
        uses: docker/login-action@v1
        with:
          registry: cerbos.jfrog.io
          username: ${{ secrets.ARTIFACTORY_PROD_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_PROD_SECRET }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/.cache/cerbos/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --config=.goreleaser.yml --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ARTIFACTORY_PROD_USERNAME: ${{ secrets.ARTIFACTORY_PROD_USERNAME }}
          ARTIFACTORY_PROD_SECRET: ${{ secrets.ARTIFACTORY_PROD_SECRET }}
          HOMEBREW_GITHUB_TOKEN: ${{ secrets.HOMEBREW_GITHUB_TOKEN }}

  releaseProtos:
    name: Release Protobufs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Buf
        uses: bufbuild/buf-setup-action@v0.6.0

      - name: Push to BSR 
        uses: bufbuild/buf-push-action@v1.0.0
        with:
          buf_token: ${{ secrets.BUF_TOKEN }}
          input: api/public


  releaseDocs:
    name: Release Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true

      - name: Generate docs
        uses: ./.github/actions/antora-docs
        id: docs

      - name: Publish to Netlify
        uses: netlify/actions/cli@master
        with:
          args: deploy --prod
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}


  publishHelm:
    name: Publish Helm chart
    runs-on: ubuntu-latest
    env:
      CHARTS_DIR: deploy/out/helm-charts
      OCI_REGISTRY: ghcr.io/cerbos/helm-charts
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Helm
        uses: azure/setup-helm@v1

      - name: Install Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Package Helm chart
        run: |-
          mkdir -p ${{ env.CHARTS_DIR }}/cerbos
          helm package -d ${{ env.CHARTS_DIR }}/cerbos deploy/charts/cerbos

      - name: Publish to download site
        run: |-
          gsutil cp ${{ secrets.GCS_BUCKET }}/helm-charts/index.yaml ${{ env.CHARTS_DIR }}/index.yaml
          helm repo index --url=https://download.cerbos.dev/helm-charts --merge=${{ env.CHARTS_DIR }}/index.yaml ${{ env.CHARTS_DIR }}
          gsutil rsync -r ${{ env.CHARTS_DIR }}/ ${{ secrets.GCS_BUCKET }}/helm-charts/

      - name: Publish to OCI registry
        run: |-
          helm registry login ${{ env.OCI_REGISTRY }} -u ${{ secrets.HELM_CHARTS_REPO_USER }} -p ${{ secrets.HELM_CHARTS_REPO_TOKEN }}
          CHART=$(ls ${{ env.CHARTS_DIR }}/cerbos/*.tgz); helm push $CHART oci://${{ env.OCI_REGISTRY }}
          helm registry logout ${{ env.OCI_REGISTRY }}
        env:
          HELM_EXPERIMENTAL_OCI: '1'

      - name: Publish to JFrog
        run: CHART=$(ls ${{ env.CHARTS_DIR }}/cerbos/*.tgz); curl -H "X-JFrog-Art-Api:${{ secrets.ARTIFACTORY_API_KEY }}" -T "$CHART" "https://cerbos.jfrog.io/artifactory/helm/$(basename $CHART)"

