---
name: Test Lambda Function Publishing
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Test version (e.g., v1.0.0-test)'
        required: false
        default: 'v0.0.0-test'
        type: string
      arch:
        description: 'Architecture to test'
        required: false
        default: 'arm64'
        type: choice
        options:
          - arm64
          - amd64

jobs:
  buildBinaries:
    name: Release Binaries
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      id-token: write
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Free disk space
        uses: ./.github/actions/free-disk-space

      - name: Install Go and restore cached dependencies
        uses: ./.github/actions/setup-go
        with:
          cross_compiling: true

      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: build --config=.goreleaser.yml --snapshot --id cerbos-aws-lambda-ext --id cerbos-aws-lambda-func --clean
        env:
          TELEMETRY_WRITE_KEY: ${{ secrets.TELEMETRY_WRITE_KEY }}
          TELEMETRY_URL: ${{ secrets.TELEMETRY_URL }}

      - name: Upload artifacts as goreleaser build does not upload them
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: dist/

  testPublishLambdaFunction:
    name: Test Publish AWS Lambda Function to SAR
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: buildBinaries
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: us-east-2
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: artifacts
          path: dist/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/github
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Install just
        uses: extractions/setup-just@v3

      - name: Test Lambda function publishing
        run: |
          export AWS_REGION="${{ vars.AWS_REGION }}"
          just -f deploy/awslambda/function/.justfile publish-to-sar "${{ github.event.inputs.version }}" "${{ secrets.AWS_SAR_PUBLISHING_BUCKET }}" "${{ github.event.inputs.arch }}"

      - name: Test Lambda extension publishing
        run: |
          export AWS_REGION="${{ vars.AWS_REGION }}"
          just -f deploy/awslambda/extension/.justfile publish-to-sar "${{ github.event.inputs.version }}" "${{ secrets.AWS_SAR_PUBLISHING_BUCKET }}" "${{ github.event.inputs.arch }}"
