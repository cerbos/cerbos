---
name: Snapshots
on:
  push:
    branches:
      - main
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: arm64

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GHCR
        run:  echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/.cache/cerbos/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}

      - name: Generate
        run: make generate

      - name: Check repo status
        run: |-
          REPO_STATUS="$(git status --porcelain)"
          if [[ ! -z $REPO_STATUS ]]; then
            echo "Uncommitted changes detected"
            echo "$REPO_STATUS"
            exit 1
          fi

      - name: Test
        run: make test

      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --config=.goreleaser-ci.yml --rm-dist --snapshot --skip-publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push dev images
        run: docker push ghcr.io/cerbos/cerbos:dev-amd64 && docker push ghcr.io/cerbos/cerbos:dev-arm64

  docs:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Generate docs
        uses: ./.github/actions/antora-docs
        id: docs

  golangci:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: '--config=.golangci.yaml -v'
