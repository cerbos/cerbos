// Copyright 2021 Zenauth Ltd.

syntax = "proto3";

package svc.v1;

option go_package = "github.com/cerbos/cerbos/internal/genpb/svc/v1;svcv1";
option java_package = "dev.cerbos.api.v1.svc";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "request/v1/request.proto";
import "response/v1/response.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "Cerbos";
		version: "latest";
		contact: {
			name: "Cerbos";
			url: "https://cerbos.dev";
			email: "info@cerbos.dev";
		};
	};
	schemes: HTTPS;
	consumes: "application/json";
	produces: "application/json";
};

service CerbosService {
	option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
		description: "Cerbos Policy Decision Point"
	};

    rpc CheckResourceSet(request.v1.CheckResourceSetRequest) returns (response.v1.CheckResourceSetResponse) {
        option (google.api.http) = {
            post: "/api/check",
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Check"
            description: "Check whether a principal has permissions to perform the given actions on a set of resource instances."
        };
    }

    rpc CheckResourceBatch(request.v1.CheckResourceBatchRequest) returns (response.v1.CheckResourceBatchResponse) {
        option (google.api.http) = {
            post: "/api/x/check_resource_batch",
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Check resource batch"
            description: "[Experimental] Check a principal's permissions to a batch of heterogeneous resources and actions."
            extensions: {
                key: "x-cerbos-experimental";
                value: {
                    bool_value: true;
                }
            }
        };
    }
}
