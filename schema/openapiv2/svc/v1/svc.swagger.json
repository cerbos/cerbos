{
  "swagger": "2.0",
  "info": {
    "title": "Cerbos",
    "version": "latest",
    "contact": {
      "name": "Cerbos",
      "url": "https://cerbos.dev",
      "email": "info@cerbos.dev"
    }
  },
  "tags": [
    {
      "name": "CerbosService",
      "description": "Cerbos Policy Decision Point"
    },
    {
      "name": "CerbosPlaygroundService"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/check": {
      "post": {
        "summary": "Check",
        "description": "Check whether a principal has permissions to perform the given actions on a set of resource instances.",
        "operationId": "CerbosService_CheckResourceSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckResourceSetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckResourceSetRequest"
            }
          }
        ],
        "tags": [
          "CerbosService"
        ]
      }
    },
    "/api/playground": {
      "post": {
        "operationId": "CerbosPlaygroundService_Playground",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PlaygroundResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PlaygroundRequest"
            }
          }
        ],
        "tags": [
          "CerbosPlaygroundService"
        ]
      }
    },
    "/api/x/check_resource_batch": {
      "post": {
        "summary": "Check resource batch",
        "description": "[Experimental] Check a principal's permissions to a batch of heterogeneous resources and actions.",
        "operationId": "CerbosService_CheckResourceBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CheckResourceBatchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CheckResourceBatchRequest"
            }
          }
        ],
        "tags": [
          "CerbosService"
        ],
        "x-cerbos-experimental": true
      }
    }
  },
  "definitions": {
    "CheckResourceBatchRequestBatchEntry": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "example": [
            "view:public",
            "comment"
          ],
          "items": {
            "type": "string"
          },
          "description": "List of actions being performed on the resource.",
          "maxItems": 10,
          "minItems": 1,
          "uniqueItems": true,
          "required": [
            "actions"
          ]
        },
        "resource": {
          "$ref": "#/definitions/v1Resource"
        }
      },
      "required": [
        "actions"
      ]
    },
    "CheckResourceSetResponseMeta": {
      "type": "object",
      "properties": {
        "resourceInstances": {
          "type": "object",
          "example": {
            "XX125": {
              "actions": {
                "view:*": {
                  "matched_policy": "album:object:default"
                },
                "comment": {
                  "matched_policy": "album:object:default"
                }
              },
              "effective_derived_roles": [
                "owner"
              ]
            },
            "XX225": {
              "actions": {
                "view:*": {
                  "matched_policy": "album:object:default"
                },
                "comment": {
                  "matched_policy": "album:object:default"
                }
              }
            }
          },
          "additionalProperties": {
            "$ref": "#/definitions/MetaActionMeta"
          },
          "description": "Metadata about resource instances."
        }
      },
      "description": "Metadata about request evaluation."
    },
    "MetaActionMeta": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "object",
          "example": {
            "view:*": {
              "matched_policy": "album:object:default"
            },
            "comment": {
              "matched_policy": "album:object:default"
            }
          },
          "additionalProperties": {
            "$ref": "#/definitions/MetaEffectMeta"
          },
          "description": "Metadata about the effect calculated for each action on this resource instance."
        },
        "effectiveDerivedRoles": {
          "type": "array",
          "example": [
            "owner"
          ],
          "items": {
            "type": "string"
          },
          "description": "Derived roles that were effective during policy evaluation."
        }
      },
      "description": "Unique resource instance ID supplied in the request."
    },
    "MetaEffectMeta": {
      "type": "object",
      "properties": {
        "matchedPolicy": {
          "type": "string",
          "example": "album:object:default",
          "description": "Policy that matched to produce this effect."
        }
      },
      "description": "Name of the action."
    },
    "PlaygroundRequestPolicyFile": {
      "type": "object",
      "properties": {
        "fileName": {
          "type": "string",
          "required": [
            "file_name"
          ]
        },
        "contents": {
          "type": "string",
          "format": "byte",
          "required": [
            "contents"
          ]
        }
      },
      "required": [
        "fileName",
        "contents"
      ]
    },
    "PlaygroundResponseError": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string"
        },
        "error": {
          "type": "string"
        }
      }
    },
    "PlaygroundResponseErrorList": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlaygroundResponseError"
          }
        }
      }
    },
    "PlaygroundResponseEvalResult": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "effect": {
          "$ref": "#/definitions/v1Effect"
        },
        "policy": {
          "type": "string"
        },
        "effectiveDerivedRoles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PlaygroundResponseEvalResultList": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlaygroundResponseEvalResult"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AttributesMap": {
      "type": "object",
      "properties": {
        "attr": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "description": "Key-value pairs of contextual data about this instance that should be used during policy evaluation."
        }
      },
      "description": "Unique identifier for the resource instance."
    },
    "v1CheckResourceBatchRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "example": "c2db17b8-4f9f-4fb1-acfd-9162a02be42b",
          "description": "Optional application-specific ID useful for correlating logs for analysis."
        },
        "principal": {
          "$ref": "#/definitions/v1Principal"
        },
        "resources": {
          "type": "array",
          "example": [
            {
              "actions": [
                "view",
                "comment"
              ],
              "resource": {
                "kind": "album:object",
                "policyVersion": "default",
                "id": "XX125",
                "attr": {
                  "owner": "bugs_bunny",
                  "public": false,
                  "flagged": false
                }
              }
            }
          ],
          "items": {
            "$ref": "#/definitions/CheckResourceBatchRequestBatchEntry"
          },
          "description": "List of resources and actions.",
          "maxItems": 20,
          "minItems": 1,
          "uniqueItems": true,
          "required": [
            "resources"
          ]
        }
      },
      "description": "PDP Request",
      "required": [
        "resources"
      ]
    },
    "v1CheckResourceBatchResponse": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "example": "c2db17b8-4f9f-4fb1-acfd-9162a02be42b",
          "description": "Request ID provided in the request."
        },
        "results": {
          "type": "array",
          "example": [
            {
              "resourceId": "XX125",
              "actions": {
                "view": "EFFECT_ALLOW"
              }
            }
          ],
          "items": {
            "$ref": "#/definitions/v1CheckResourceBatchResponseActionEffectMap"
          },
          "description": "Result for each resource"
        }
      },
      "description": "Policy evaluation response for a batch of resources."
    },
    "v1CheckResourceBatchResponseActionEffectMap": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "string",
          "example": "XX125",
          "description": "Resource ID"
        },
        "actions": {
          "type": "object",
          "example": {
            "view": "EFFECT_ALLOW"
          },
          "additionalProperties": {
            "$ref": "#/definitions/v1Effect"
          },
          "description": "Mapping of each action to an effect."
        }
      }
    },
    "v1CheckResourceSetRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "example": "c2db17b8-4f9f-4fb1-acfd-9162a02be42b",
          "description": "Optional application-specific ID useful for correlating logs for analysis."
        },
        "actions": {
          "type": "array",
          "example": [
            "view:public",
            "comment"
          ],
          "items": {
            "type": "string"
          },
          "description": "List of actions being performed on the set of resources.",
          "maxItems": 10,
          "minItems": 1,
          "uniqueItems": true,
          "required": [
            "actions"
          ]
        },
        "principal": {
          "$ref": "#/definitions/v1Principal"
        },
        "resource": {
          "$ref": "#/definitions/v1ResourceSet"
        },
        "includeMeta": {
          "type": "boolean",
          "description": "Opt to receive request processing metadata in the response."
        }
      },
      "description": "PDP Request",
      "required": [
        "actions"
      ]
    },
    "v1CheckResourceSetResponse": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "example": "c2db17b8-4f9f-4fb1-acfd-9162a02be42b",
          "description": "Request ID provided in the request."
        },
        "resourceInstances": {
          "type": "object",
          "example": {
            "XX125": {
              "actions": {
                "view:*": "EFFECT_ALLOW",
                "comment": "EFFECT_ALLOW"
              }
            },
            "XX225": {
              "actions": {
                "view:*": "EFFECT_DENY",
                "comment": "EFFECT_DENY"
              }
            }
          },
          "additionalProperties": {
            "$ref": "#/definitions/v1CheckResourceSetResponseActionEffectMap"
          },
          "description": "Results for each resource instance, keyed by the ID supplied in the request"
        },
        "meta": {
          "$ref": "#/definitions/CheckResourceSetResponseMeta",
          "description": "Optional metadata about the request evaluation process"
        }
      },
      "description": "Policy evaluation response for a set of resources."
    },
    "v1CheckResourceSetResponseActionEffectMap": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1Effect"
          },
          "description": "Mapping of each action to an effect."
        }
      }
    },
    "v1Effect": {
      "type": "string",
      "enum": [
        "EFFECT_UNSPECIFIED",
        "EFFECT_ALLOW",
        "EFFECT_DENY",
        "EFFECT_NO_MATCH"
      ],
      "default": "EFFECT_UNSPECIFIED"
    },
    "v1PlaygroundRequest": {
      "type": "object",
      "properties": {
        "playgroundId": {
          "type": "string"
        },
        "policyFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PlaygroundRequestPolicyFile"
          },
          "description": "List of policy files.",
          "maxItems": 10,
          "minItems": 1,
          "required": [
            "policy_files"
          ]
        },
        "principal": {
          "$ref": "#/definitions/v1Principal"
        },
        "resource": {
          "$ref": "#/definitions/v1Resource"
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of actions being performed on the resource.",
          "maxItems": 10,
          "minItems": 1,
          "uniqueItems": true,
          "required": [
            "actions"
          ]
        }
      },
      "description": "Playground request",
      "required": [
        "policyFiles",
        "actions"
      ]
    },
    "v1PlaygroundResponse": {
      "type": "object",
      "properties": {
        "playgroundId": {
          "type": "string"
        },
        "failure": {
          "$ref": "#/definitions/PlaygroundResponseErrorList"
        },
        "success": {
          "$ref": "#/definitions/PlaygroundResponseEvalResultList"
        }
      },
      "description": "Playground response"
    },
    "v1Principal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "bugs_bunny",
          "description": "ID of the principal",
          "required": [
            "id"
          ]
        },
        "policyVersion": {
          "type": "string",
          "example": "default",
          "description": "The policy version to use to evaluate this request. If not specified, will default to the server-configured default version.",
          "pattern": "^[[:word:]]*$"
        },
        "roles": {
          "type": "array",
          "example": [
            "user"
          ],
          "items": {
            "type": "string"
          },
          "description": "Roles assigned to this principal from your identity management system.",
          "pattern": "^[[:word:]\\-\\.]+$",
          "maxItems": 20,
          "minItems": 1,
          "uniqueItems": true,
          "required": [
            "roles"
          ]
        },
        "attr": {
          "type": "object",
          "example": {
            "beta_tester": true
          },
          "additionalProperties": {
            "type": "object"
          },
          "description": "Key-value pairs of contextual data about this principal that should be used during policy evaluation."
        }
      },
      "description": "A person or application attempting to perform the actions on the set of resources.",
      "required": [
        "id",
        "roles"
      ]
    },
    "v1Resource": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "example": "album:photo",
          "description": "Name of the resource kind being accessed.",
          "pattern": "^[[:alpha:]][[:word:]\\@\\.\\-]*(\\:[[:alpha:]][[:word:]\\@\\.\\-]*)*$",
          "required": [
            "kind"
          ]
        },
        "policyVersion": {
          "type": "string",
          "example": "default",
          "description": "The policy version to use to evaluate this request. If not specified, will default to the server-configured default version.",
          "pattern": "^[[:word:]]*$"
        },
        "id": {
          "type": "string",
          "example": "XX125",
          "description": "ID of the resource instance",
          "required": [
            "id"
          ]
        },
        "attr": {
          "type": "object",
          "example": {
            "owner": "bugs_bunny"
          },
          "additionalProperties": {
            "type": "object"
          },
          "description": "Kay-value pairs of contextual data about this resource that should be used during policy evaluation."
        }
      },
      "required": [
        "kind",
        "id"
      ]
    },
    "v1ResourceSet": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "example": "album:object",
          "description": "Resource kind.",
          "pattern": "^[[:alpha:]][[:word:]\\@\\.\\-]*(\\:[[:alpha:]][[:word:]\\@\\.\\-]*)*$",
          "required": [
            "kind"
          ]
        },
        "policyVersion": {
          "type": "string",
          "example": "default",
          "description": "The policy version to use to evaluate this request. If not specified, will default to the server-configured default version.",
          "pattern": "^[[:word:]]*$"
        },
        "instances": {
          "type": "object",
          "example": {
            "XX125": {
              "attr": {
                "owner": "bugs_bunny",
                "public": false,
                "flagged": false
              }
            },
            "XX225": {
              "attr": {
                "owner": "daffy_duck",
                "public": true,
                "flagged": false
              }
            }
          },
          "additionalProperties": {
            "$ref": "#/definitions/v1AttributesMap"
          },
          "description": "Set of resource instances to check. Each instance must be keyed by an application-specific unique identifier.",
          "maxProperties": 20,
          "minProperties": 1,
          "required": [
            "instances"
          ]
        }
      },
      "description": "Set of resources to check",
      "required": [
        "kind",
        "instances"
      ]
    }
  }
}
