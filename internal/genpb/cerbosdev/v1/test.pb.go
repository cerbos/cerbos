// Copyright 2021 Zenauth Ltd.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.17.1
// source: cerbosdev/v1/test.proto

package cerbosdevv1

import (
	v1 "github.com/cerbos/cerbos/internal/genpb/engine/v1"
	v11 "github.com/cerbos/cerbos/internal/genpb/policy/v1"
	v12 "github.com/cerbos/cerbos/internal/genpb/request/v1"
	v13 "github.com/cerbos/cerbos/internal/genpb/response/v1"
	_ "github.com/cerbos/cerbos/internal/genpb/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EngineTestCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string            `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Inputs      []*v1.CheckInput  `protobuf:"bytes,2,rep,name=inputs,proto3" json:"inputs,omitempty"`
	WantOutputs []*v1.CheckOutput `protobuf:"bytes,3,rep,name=want_outputs,json=wantOutputs,proto3" json:"want_outputs,omitempty"`
	WantError   bool              `protobuf:"varint,4,opt,name=want_error,json=wantError,proto3" json:"want_error,omitempty"`
}

func (x *EngineTestCase) Reset() {
	*x = EngineTestCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbosdev_v1_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EngineTestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EngineTestCase) ProtoMessage() {}

func (x *EngineTestCase) ProtoReflect() protoreflect.Message {
	mi := &file_cerbosdev_v1_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EngineTestCase.ProtoReflect.Descriptor instead.
func (*EngineTestCase) Descriptor() ([]byte, []int) {
	return file_cerbosdev_v1_test_proto_rawDescGZIP(), []int{0}
}

func (x *EngineTestCase) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *EngineTestCase) GetInputs() []*v1.CheckInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *EngineTestCase) GetWantOutputs() []*v1.CheckOutput {
	if x != nil {
		return x.WantOutputs
	}
	return nil
}

func (x *EngineTestCase) GetWantError() bool {
	if x != nil {
		return x.WantError
	}
	return false
}

type ServerTestCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	WantError   bool                   `protobuf:"varint,3,opt,name=want_error,json=wantError,proto3" json:"want_error,omitempty"`
	WantStatus  *ServerTestCase_Status `protobuf:"bytes,4,opt,name=want_status,json=wantStatus,proto3" json:"want_status,omitempty"`
	// Types that are assignable to CallKind:
	//	*ServerTestCase_CheckResourceSet
	//	*ServerTestCase_CheckResourceBatch
	//	*ServerTestCase_PlaygroundValidate
	//	*ServerTestCase_PlaygroundEvaluate
	//	*ServerTestCase_AdminAddOrUpdatePolicy
	CallKind isServerTestCase_CallKind `protobuf_oneof:"call_kind"`
}

func (x *ServerTestCase) Reset() {
	*x = ServerTestCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbosdev_v1_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTestCase) ProtoMessage() {}

func (x *ServerTestCase) ProtoReflect() protoreflect.Message {
	mi := &file_cerbosdev_v1_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTestCase.ProtoReflect.Descriptor instead.
func (*ServerTestCase) Descriptor() ([]byte, []int) {
	return file_cerbosdev_v1_test_proto_rawDescGZIP(), []int{1}
}

func (x *ServerTestCase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerTestCase) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ServerTestCase) GetWantError() bool {
	if x != nil {
		return x.WantError
	}
	return false
}

func (x *ServerTestCase) GetWantStatus() *ServerTestCase_Status {
	if x != nil {
		return x.WantStatus
	}
	return nil
}

func (m *ServerTestCase) GetCallKind() isServerTestCase_CallKind {
	if m != nil {
		return m.CallKind
	}
	return nil
}

func (x *ServerTestCase) GetCheckResourceSet() *ServerTestCase_CheckResourceSetCall {
	if x, ok := x.GetCallKind().(*ServerTestCase_CheckResourceSet); ok {
		return x.CheckResourceSet
	}
	return nil
}

func (x *ServerTestCase) GetCheckResourceBatch() *ServerTestCase_CheckResourceBatchCall {
	if x, ok := x.GetCallKind().(*ServerTestCase_CheckResourceBatch); ok {
		return x.CheckResourceBatch
	}
	return nil
}

func (x *ServerTestCase) GetPlaygroundValidate() *ServerTestCase_PlaygroundValidateCall {
	if x, ok := x.GetCallKind().(*ServerTestCase_PlaygroundValidate); ok {
		return x.PlaygroundValidate
	}
	return nil
}

func (x *ServerTestCase) GetPlaygroundEvaluate() *ServerTestCase_PlaygroundEvaluateCall {
	if x, ok := x.GetCallKind().(*ServerTestCase_PlaygroundEvaluate); ok {
		return x.PlaygroundEvaluate
	}
	return nil
}

func (x *ServerTestCase) GetAdminAddOrUpdatePolicy() *ServerTestCase_AdminAddOrUpdatePolicyCall {
	if x, ok := x.GetCallKind().(*ServerTestCase_AdminAddOrUpdatePolicy); ok {
		return x.AdminAddOrUpdatePolicy
	}
	return nil
}

type isServerTestCase_CallKind interface {
	isServerTestCase_CallKind()
}

type ServerTestCase_CheckResourceSet struct {
	CheckResourceSet *ServerTestCase_CheckResourceSetCall `protobuf:"bytes,5,opt,name=check_resource_set,json=checkResourceSet,proto3,oneof"`
}

type ServerTestCase_CheckResourceBatch struct {
	CheckResourceBatch *ServerTestCase_CheckResourceBatchCall `protobuf:"bytes,6,opt,name=check_resource_batch,json=checkResourceBatch,proto3,oneof"`
}

type ServerTestCase_PlaygroundValidate struct {
	PlaygroundValidate *ServerTestCase_PlaygroundValidateCall `protobuf:"bytes,7,opt,name=playground_validate,json=playgroundValidate,proto3,oneof"`
}

type ServerTestCase_PlaygroundEvaluate struct {
	PlaygroundEvaluate *ServerTestCase_PlaygroundEvaluateCall `protobuf:"bytes,8,opt,name=playground_evaluate,json=playgroundEvaluate,proto3,oneof"`
}

type ServerTestCase_AdminAddOrUpdatePolicy struct {
	AdminAddOrUpdatePolicy *ServerTestCase_AdminAddOrUpdatePolicyCall `protobuf:"bytes,9,opt,name=admin_add_or_update_policy,json=adminAddOrUpdatePolicy,proto3,oneof"`
}

func (*ServerTestCase_CheckResourceSet) isServerTestCase_CallKind() {}

func (*ServerTestCase_CheckResourceBatch) isServerTestCase_CallKind() {}

func (*ServerTestCase_PlaygroundValidate) isServerTestCase_CallKind() {}

func (*ServerTestCase_PlaygroundEvaluate) isServerTestCase_CallKind() {}

func (*ServerTestCase_AdminAddOrUpdatePolicy) isServerTestCase_CallKind() {}

type IndexBuilderTestCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files       map[string]string `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WantErrJson string            `protobuf:"bytes,2,opt,name=want_err_json,json=wantErrJson,proto3" json:"want_err_json,omitempty"`
	WantErr     string            `protobuf:"bytes,3,opt,name=want_err,json=wantErr,proto3" json:"want_err,omitempty"`
}

func (x *IndexBuilderTestCase) Reset() {
	*x = IndexBuilderTestCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbosdev_v1_test_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexBuilderTestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexBuilderTestCase) ProtoMessage() {}

func (x *IndexBuilderTestCase) ProtoReflect() protoreflect.Message {
	mi := &file_cerbosdev_v1_test_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexBuilderTestCase.ProtoReflect.Descriptor instead.
func (*IndexBuilderTestCase) Descriptor() ([]byte, []int) {
	return file_cerbosdev_v1_test_proto_rawDescGZIP(), []int{2}
}

func (x *IndexBuilderTestCase) GetFiles() map[string]string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *IndexBuilderTestCase) GetWantErrJson() string {
	if x != nil {
		return x.WantErrJson
	}
	return ""
}

func (x *IndexBuilderTestCase) GetWantErr() string {
	if x != nil {
		return x.WantErr
	}
	return ""
}

type CompileTestCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MainDef    string                 `protobuf:"bytes,1,opt,name=main_def,json=mainDef,proto3" json:"main_def,omitempty"`
	InputDefs  map[string]*v11.Policy `protobuf:"bytes,2,rep,name=input_defs,json=inputDefs,proto3" json:"input_defs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WantErrors []string               `protobuf:"bytes,3,rep,name=want_errors,json=wantErrors,proto3" json:"want_errors,omitempty"`
}

func (x *CompileTestCase) Reset() {
	*x = CompileTestCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbosdev_v1_test_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompileTestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompileTestCase) ProtoMessage() {}

func (x *CompileTestCase) ProtoReflect() protoreflect.Message {
	mi := &file_cerbosdev_v1_test_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompileTestCase.ProtoReflect.Descriptor instead.
func (*CompileTestCase) Descriptor() ([]byte, []int) {
	return file_cerbosdev_v1_test_proto_rawDescGZIP(), []int{3}
}

func (x *CompileTestCase) GetMainDef() string {
	if x != nil {
		return x.MainDef
	}
	return ""
}

func (x *CompileTestCase) GetInputDefs() map[string]*v11.Policy {
	if x != nil {
		return x.InputDefs
	}
	return nil
}

func (x *CompileTestCase) GetWantErrors() []string {
	if x != nil {
		return x.WantErrors
	}
	return nil
}

type CodeGenTestCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputPolicy       *v11.Policy `protobuf:"bytes,1,opt,name=input_policy,json=inputPolicy,proto3" json:"input_policy,omitempty"`
	WantError         bool        `protobuf:"varint,2,opt,name=want_error,json=wantError,proto3" json:"want_error,omitempty"`
	WantRego          string      `protobuf:"bytes,3,opt,name=want_rego,json=wantRego,proto3" json:"want_rego,omitempty"`
	WantNumConditions int32       `protobuf:"varint,4,opt,name=want_num_conditions,json=wantNumConditions,proto3" json:"want_num_conditions,omitempty"`
}

func (x *CodeGenTestCase) Reset() {
	*x = CodeGenTestCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbosdev_v1_test_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeGenTestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeGenTestCase) ProtoMessage() {}

func (x *CodeGenTestCase) ProtoReflect() protoreflect.Message {
	mi := &file_cerbosdev_v1_test_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeGenTestCase.ProtoReflect.Descriptor instead.
func (*CodeGenTestCase) Descriptor() ([]byte, []int) {
	return file_cerbosdev_v1_test_proto_rawDescGZIP(), []int{4}
}

func (x *CodeGenTestCase) GetInputPolicy() *v11.Policy {
	if x != nil {
		return x.InputPolicy
	}
	return nil
}

func (x *CodeGenTestCase) GetWantError() bool {
	if x != nil {
		return x.WantError
	}
	return false
}

func (x *CodeGenTestCase) GetWantRego() string {
	if x != nil {
		return x.WantRego
	}
	return ""
}

func (x *CodeGenTestCase) GetWantNumConditions() int32 {
	if x != nil {
		return x.WantNumConditions
	}
	return 0
}

type CelTestCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition *v11.Match     `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	Input     *v1.CheckInput `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	Want      bool           `protobuf:"varint,3,opt,name=want,proto3" json:"want,omitempty"`
	WantError bool           `protobuf:"varint,4,opt,name=want_error,json=wantError,proto3" json:"want_error,omitempty"`
}

func (x *CelTestCase) Reset() {
	*x = CelTestCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbosdev_v1_test_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CelTestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CelTestCase) ProtoMessage() {}

func (x *CelTestCase) ProtoReflect() protoreflect.Message {
	mi := &file_cerbosdev_v1_test_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CelTestCase.ProtoReflect.Descriptor instead.
func (*CelTestCase) Descriptor() ([]byte, []int) {
	return file_cerbosdev_v1_test_proto_rawDescGZIP(), []int{5}
}

func (x *CelTestCase) GetCondition() *v11.Match {
	if x != nil {
		return x.Condition
	}
	return nil
}

func (x *CelTestCase) GetInput() *v1.CheckInput {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *CelTestCase) GetWant() bool {
	if x != nil {
		return x.Want
	}
	return false
}

func (x *CelTestCase) GetWantError() bool {
	if x != nil {
		return x.WantError
	}
	return false
}

type ServerTestCase_CheckResourceSetCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input        *v12.CheckResourceSetRequest  `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	WantResponse *v13.CheckResourceSetResponse `protobuf:"bytes,2,opt,name=want_response,json=wantResponse,proto3" json:"want_response,omitempty"`
}

func (x *ServerTestCase_CheckResourceSetCall) Reset() {
	*x = ServerTestCase_CheckResourceSetCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbosdev_v1_test_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTestCase_CheckResourceSetCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTestCase_CheckResourceSetCall) ProtoMessage() {}

func (x *ServerTestCase_CheckResourceSetCall) ProtoReflect() protoreflect.Message {
	mi := &file_cerbosdev_v1_test_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTestCase_CheckResourceSetCall.ProtoReflect.Descriptor instead.
func (*ServerTestCase_CheckResourceSetCall) Descriptor() ([]byte, []int) {
	return file_cerbosdev_v1_test_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ServerTestCase_CheckResourceSetCall) GetInput() *v12.CheckResourceSetRequest {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *ServerTestCase_CheckResourceSetCall) GetWantResponse() *v13.CheckResourceSetResponse {
	if x != nil {
		return x.WantResponse
	}
	return nil
}

type ServerTestCase_CheckResourceBatchCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input        *v12.CheckResourceBatchRequest  `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	WantResponse *v13.CheckResourceBatchResponse `protobuf:"bytes,2,opt,name=want_response,json=wantResponse,proto3" json:"want_response,omitempty"`
}

func (x *ServerTestCase_CheckResourceBatchCall) Reset() {
	*x = ServerTestCase_CheckResourceBatchCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbosdev_v1_test_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTestCase_CheckResourceBatchCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTestCase_CheckResourceBatchCall) ProtoMessage() {}

func (x *ServerTestCase_CheckResourceBatchCall) ProtoReflect() protoreflect.Message {
	mi := &file_cerbosdev_v1_test_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTestCase_CheckResourceBatchCall.ProtoReflect.Descriptor instead.
func (*ServerTestCase_CheckResourceBatchCall) Descriptor() ([]byte, []int) {
	return file_cerbosdev_v1_test_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ServerTestCase_CheckResourceBatchCall) GetInput() *v12.CheckResourceBatchRequest {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *ServerTestCase_CheckResourceBatchCall) GetWantResponse() *v13.CheckResourceBatchResponse {
	if x != nil {
		return x.WantResponse
	}
	return nil
}

type ServerTestCase_PlaygroundValidateCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input        *v12.PlaygroundValidateRequest  `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	WantResponse *v13.PlaygroundValidateResponse `protobuf:"bytes,2,opt,name=want_response,json=wantResponse,proto3" json:"want_response,omitempty"`
}

func (x *ServerTestCase_PlaygroundValidateCall) Reset() {
	*x = ServerTestCase_PlaygroundValidateCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbosdev_v1_test_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTestCase_PlaygroundValidateCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTestCase_PlaygroundValidateCall) ProtoMessage() {}

func (x *ServerTestCase_PlaygroundValidateCall) ProtoReflect() protoreflect.Message {
	mi := &file_cerbosdev_v1_test_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTestCase_PlaygroundValidateCall.ProtoReflect.Descriptor instead.
func (*ServerTestCase_PlaygroundValidateCall) Descriptor() ([]byte, []int) {
	return file_cerbosdev_v1_test_proto_rawDescGZIP(), []int{1, 2}
}

func (x *ServerTestCase_PlaygroundValidateCall) GetInput() *v12.PlaygroundValidateRequest {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *ServerTestCase_PlaygroundValidateCall) GetWantResponse() *v13.PlaygroundValidateResponse {
	if x != nil {
		return x.WantResponse
	}
	return nil
}

type ServerTestCase_PlaygroundEvaluateCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input        *v12.PlaygroundEvaluateRequest  `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	WantResponse *v13.PlaygroundEvaluateResponse `protobuf:"bytes,2,opt,name=want_response,json=wantResponse,proto3" json:"want_response,omitempty"`
}

func (x *ServerTestCase_PlaygroundEvaluateCall) Reset() {
	*x = ServerTestCase_PlaygroundEvaluateCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbosdev_v1_test_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTestCase_PlaygroundEvaluateCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTestCase_PlaygroundEvaluateCall) ProtoMessage() {}

func (x *ServerTestCase_PlaygroundEvaluateCall) ProtoReflect() protoreflect.Message {
	mi := &file_cerbosdev_v1_test_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTestCase_PlaygroundEvaluateCall.ProtoReflect.Descriptor instead.
func (*ServerTestCase_PlaygroundEvaluateCall) Descriptor() ([]byte, []int) {
	return file_cerbosdev_v1_test_proto_rawDescGZIP(), []int{1, 3}
}

func (x *ServerTestCase_PlaygroundEvaluateCall) GetInput() *v12.PlaygroundEvaluateRequest {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *ServerTestCase_PlaygroundEvaluateCall) GetWantResponse() *v13.PlaygroundEvaluateResponse {
	if x != nil {
		return x.WantResponse
	}
	return nil
}

type ServerTestCase_AdminAddOrUpdatePolicyCall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input        *v12.AddOrUpdatePolicyRequest  `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	WantResponse *v13.AddOrUpdatePolicyResponse `protobuf:"bytes,2,opt,name=want_response,json=wantResponse,proto3" json:"want_response,omitempty"`
}

func (x *ServerTestCase_AdminAddOrUpdatePolicyCall) Reset() {
	*x = ServerTestCase_AdminAddOrUpdatePolicyCall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbosdev_v1_test_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTestCase_AdminAddOrUpdatePolicyCall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTestCase_AdminAddOrUpdatePolicyCall) ProtoMessage() {}

func (x *ServerTestCase_AdminAddOrUpdatePolicyCall) ProtoReflect() protoreflect.Message {
	mi := &file_cerbosdev_v1_test_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTestCase_AdminAddOrUpdatePolicyCall.ProtoReflect.Descriptor instead.
func (*ServerTestCase_AdminAddOrUpdatePolicyCall) Descriptor() ([]byte, []int) {
	return file_cerbosdev_v1_test_proto_rawDescGZIP(), []int{1, 4}
}

func (x *ServerTestCase_AdminAddOrUpdatePolicyCall) GetInput() *v12.AddOrUpdatePolicyRequest {
	if x != nil {
		return x.Input
	}
	return nil
}

func (x *ServerTestCase_AdminAddOrUpdatePolicyCall) GetWantResponse() *v13.AddOrUpdatePolicyResponse {
	if x != nil {
		return x.WantResponse
	}
	return nil
}

type ServerTestCase_Status struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HttpStatusCode uint32 `protobuf:"varint,1,opt,name=http_status_code,json=httpStatusCode,proto3" json:"http_status_code,omitempty"`
	GrpcStatusCode uint32 `protobuf:"varint,2,opt,name=grpc_status_code,json=grpcStatusCode,proto3" json:"grpc_status_code,omitempty"`
}

func (x *ServerTestCase_Status) Reset() {
	*x = ServerTestCase_Status{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cerbosdev_v1_test_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTestCase_Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTestCase_Status) ProtoMessage() {}

func (x *ServerTestCase_Status) ProtoReflect() protoreflect.Message {
	mi := &file_cerbosdev_v1_test_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTestCase_Status.ProtoReflect.Descriptor instead.
func (*ServerTestCase_Status) Descriptor() ([]byte, []int) {
	return file_cerbosdev_v1_test_proto_rawDescGZIP(), []int{1, 5}
}

func (x *ServerTestCase_Status) GetHttpStatusCode() uint32 {
	if x != nil {
		return x.HttpStatusCode
	}
	return 0
}

func (x *ServerTestCase_Status) GetGrpcStatusCode() uint32 {
	if x != nil {
		return x.GrpcStatusCode
	}
	return 0
}

var File_cerbosdev_v1_test_proto protoreflect.FileDescriptor

var file_cerbosdev_v1_test_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x64, 0x65, 0x76, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x63, 0x65, 0x72, 0x62, 0x6f,
	0x73, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x31, 0x1a, 0x16, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x16, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1a, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbb, 0x01, 0x0a, 0x0e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0c, 0x77, 0x61, 0x6e,
	0x74, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x0b, 0x77, 0x61, 0x6e, 0x74, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x61, 0x6e, 0x74, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x61, 0x6e, 0x74, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0xe3, 0x0c, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x65,
	0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x77, 0x61, 0x6e, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x77, 0x61, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x0b, 0x77,
	0x61, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x77, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x61, 0x0a, 0x12, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c,
	0x48, 0x00, 0x52, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x12, 0x67, 0x0a, 0x14, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x64, 0x65, 0x76, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x12, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x66, 0x0a,
	0x13, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x65, 0x72,
	0x62, 0x6f, 0x73, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x48,
	0x00, 0x52, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x5f, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x64, 0x65, 0x76, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x75,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x12, 0x70, 0x6c, 0x61, 0x79, 0x67,
	0x72, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x12, 0x75, 0x0a,
	0x1a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x6f, 0x72, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x16, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x1a, 0x9d, 0x01, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x39, 0x0a,
	0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x4a, 0x0a, 0x0d, 0x77, 0x61, 0x6e, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x77, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xa3, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x61, 0x6c, 0x6c, 0x12,
	0x3b, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x0d,
	0x77, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x77, 0x61,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xa3, 0x01, 0x0a, 0x16, 0x50,
	0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x4c, 0x0a, 0x0d, 0x77, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0c, 0x77, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x1a, 0xa3, 0x01, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x3b, 0x0a, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x4c, 0x0a, 0x0d, 0x77, 0x61, 0x6e, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x77, 0x61, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0xa5, 0x01, 0x0a, 0x1a, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x3a, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x4b, 0x0a, 0x0d, 0x77, 0x61, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4f, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x0c, 0x77, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x5c,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x74, 0x74, 0x70,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x68, 0x74, 0x74, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x67, 0x72,
	0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09,
	0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x14, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x64, 0x65, 0x76, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x65, 0x73,
	0x74, 0x43, 0x61, 0x73, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x77, 0x61, 0x6e, 0x74, 0x5f,
	0x65, 0x72, 0x72, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x77, 0x61, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x77,
	0x61, 0x6e, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77,
	0x61, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x1a, 0x38, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xeb, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x73, 0x74,
	0x43, 0x61, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x66,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x65, 0x66, 0x12,
	0x4b, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x64, 0x65, 0x76, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x77, 0x61, 0x6e, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x77, 0x61, 0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x1a, 0x4f, 0x0a,
	0x0e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x66, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb3,
	0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x64, 0x65, 0x47, 0x65, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61,
	0x73, 0x65, 0x12, 0x34, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0b, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x61, 0x6e, 0x74,
	0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x61,
	0x6e, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x6e, 0x74,
	0x52, 0x65, 0x67, 0x6f, 0x12, 0x2e, 0x0a, 0x13, 0x77, 0x61, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x5f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x77, 0x61, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x0b, 0x43, 0x65, 0x6c, 0x54, 0x65, 0x73, 0x74,
	0x43, 0x61, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x77, 0x61, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x61, 0x6e, 0x74, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x61, 0x6e, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x42, 0x42, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x2f, 0x63, 0x65, 0x72, 0x62, 0x6f, 0x73,
	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x62, 0x2f,
	0x63, 0x65, 0x72, 0x62, 0x6f, 0x73, 0x64, 0x65, 0x76, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x65, 0x72,
	0x62, 0x6f, 0x73, 0x64, 0x65, 0x76, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cerbosdev_v1_test_proto_rawDescOnce sync.Once
	file_cerbosdev_v1_test_proto_rawDescData = file_cerbosdev_v1_test_proto_rawDesc
)

func file_cerbosdev_v1_test_proto_rawDescGZIP() []byte {
	file_cerbosdev_v1_test_proto_rawDescOnce.Do(func() {
		file_cerbosdev_v1_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_cerbosdev_v1_test_proto_rawDescData)
	})
	return file_cerbosdev_v1_test_proto_rawDescData
}

var file_cerbosdev_v1_test_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_cerbosdev_v1_test_proto_goTypes = []interface{}{
	(*EngineTestCase)(nil),                            // 0: cerbosdev.v1.EngineTestCase
	(*ServerTestCase)(nil),                            // 1: cerbosdev.v1.ServerTestCase
	(*IndexBuilderTestCase)(nil),                      // 2: cerbosdev.v1.IndexBuilderTestCase
	(*CompileTestCase)(nil),                           // 3: cerbosdev.v1.CompileTestCase
	(*CodeGenTestCase)(nil),                           // 4: cerbosdev.v1.CodeGenTestCase
	(*CelTestCase)(nil),                               // 5: cerbosdev.v1.CelTestCase
	(*ServerTestCase_CheckResourceSetCall)(nil),       // 6: cerbosdev.v1.ServerTestCase.CheckResourceSetCall
	(*ServerTestCase_CheckResourceBatchCall)(nil),     // 7: cerbosdev.v1.ServerTestCase.CheckResourceBatchCall
	(*ServerTestCase_PlaygroundValidateCall)(nil),     // 8: cerbosdev.v1.ServerTestCase.PlaygroundValidateCall
	(*ServerTestCase_PlaygroundEvaluateCall)(nil),     // 9: cerbosdev.v1.ServerTestCase.PlaygroundEvaluateCall
	(*ServerTestCase_AdminAddOrUpdatePolicyCall)(nil), // 10: cerbosdev.v1.ServerTestCase.AdminAddOrUpdatePolicyCall
	(*ServerTestCase_Status)(nil),                     // 11: cerbosdev.v1.ServerTestCase.Status
	nil,                                               // 12: cerbosdev.v1.IndexBuilderTestCase.FilesEntry
	nil,                                               // 13: cerbosdev.v1.CompileTestCase.InputDefsEntry
	(*v1.CheckInput)(nil),                             // 14: engine.v1.CheckInput
	(*v1.CheckOutput)(nil),                            // 15: engine.v1.CheckOutput
	(*v11.Policy)(nil),                                // 16: policy.v1.Policy
	(*v11.Match)(nil),                                 // 17: policy.v1.Match
	(*v12.CheckResourceSetRequest)(nil),               // 18: request.v1.CheckResourceSetRequest
	(*v13.CheckResourceSetResponse)(nil),              // 19: response.v1.CheckResourceSetResponse
	(*v12.CheckResourceBatchRequest)(nil),             // 20: request.v1.CheckResourceBatchRequest
	(*v13.CheckResourceBatchResponse)(nil),            // 21: response.v1.CheckResourceBatchResponse
	(*v12.PlaygroundValidateRequest)(nil),             // 22: request.v1.PlaygroundValidateRequest
	(*v13.PlaygroundValidateResponse)(nil),            // 23: response.v1.PlaygroundValidateResponse
	(*v12.PlaygroundEvaluateRequest)(nil),             // 24: request.v1.PlaygroundEvaluateRequest
	(*v13.PlaygroundEvaluateResponse)(nil),            // 25: response.v1.PlaygroundEvaluateResponse
	(*v12.AddOrUpdatePolicyRequest)(nil),              // 26: request.v1.AddOrUpdatePolicyRequest
	(*v13.AddOrUpdatePolicyResponse)(nil),             // 27: response.v1.AddOrUpdatePolicyResponse
}
var file_cerbosdev_v1_test_proto_depIdxs = []int32{
	14, // 0: cerbosdev.v1.EngineTestCase.inputs:type_name -> engine.v1.CheckInput
	15, // 1: cerbosdev.v1.EngineTestCase.want_outputs:type_name -> engine.v1.CheckOutput
	11, // 2: cerbosdev.v1.ServerTestCase.want_status:type_name -> cerbosdev.v1.ServerTestCase.Status
	6,  // 3: cerbosdev.v1.ServerTestCase.check_resource_set:type_name -> cerbosdev.v1.ServerTestCase.CheckResourceSetCall
	7,  // 4: cerbosdev.v1.ServerTestCase.check_resource_batch:type_name -> cerbosdev.v1.ServerTestCase.CheckResourceBatchCall
	8,  // 5: cerbosdev.v1.ServerTestCase.playground_validate:type_name -> cerbosdev.v1.ServerTestCase.PlaygroundValidateCall
	9,  // 6: cerbosdev.v1.ServerTestCase.playground_evaluate:type_name -> cerbosdev.v1.ServerTestCase.PlaygroundEvaluateCall
	10, // 7: cerbosdev.v1.ServerTestCase.admin_add_or_update_policy:type_name -> cerbosdev.v1.ServerTestCase.AdminAddOrUpdatePolicyCall
	12, // 8: cerbosdev.v1.IndexBuilderTestCase.files:type_name -> cerbosdev.v1.IndexBuilderTestCase.FilesEntry
	13, // 9: cerbosdev.v1.CompileTestCase.input_defs:type_name -> cerbosdev.v1.CompileTestCase.InputDefsEntry
	16, // 10: cerbosdev.v1.CodeGenTestCase.input_policy:type_name -> policy.v1.Policy
	17, // 11: cerbosdev.v1.CelTestCase.condition:type_name -> policy.v1.Match
	14, // 12: cerbosdev.v1.CelTestCase.input:type_name -> engine.v1.CheckInput
	18, // 13: cerbosdev.v1.ServerTestCase.CheckResourceSetCall.input:type_name -> request.v1.CheckResourceSetRequest
	19, // 14: cerbosdev.v1.ServerTestCase.CheckResourceSetCall.want_response:type_name -> response.v1.CheckResourceSetResponse
	20, // 15: cerbosdev.v1.ServerTestCase.CheckResourceBatchCall.input:type_name -> request.v1.CheckResourceBatchRequest
	21, // 16: cerbosdev.v1.ServerTestCase.CheckResourceBatchCall.want_response:type_name -> response.v1.CheckResourceBatchResponse
	22, // 17: cerbosdev.v1.ServerTestCase.PlaygroundValidateCall.input:type_name -> request.v1.PlaygroundValidateRequest
	23, // 18: cerbosdev.v1.ServerTestCase.PlaygroundValidateCall.want_response:type_name -> response.v1.PlaygroundValidateResponse
	24, // 19: cerbosdev.v1.ServerTestCase.PlaygroundEvaluateCall.input:type_name -> request.v1.PlaygroundEvaluateRequest
	25, // 20: cerbosdev.v1.ServerTestCase.PlaygroundEvaluateCall.want_response:type_name -> response.v1.PlaygroundEvaluateResponse
	26, // 21: cerbosdev.v1.ServerTestCase.AdminAddOrUpdatePolicyCall.input:type_name -> request.v1.AddOrUpdatePolicyRequest
	27, // 22: cerbosdev.v1.ServerTestCase.AdminAddOrUpdatePolicyCall.want_response:type_name -> response.v1.AddOrUpdatePolicyResponse
	16, // 23: cerbosdev.v1.CompileTestCase.InputDefsEntry.value:type_name -> policy.v1.Policy
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_cerbosdev_v1_test_proto_init() }
func file_cerbosdev_v1_test_proto_init() {
	if File_cerbosdev_v1_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cerbosdev_v1_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EngineTestCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbosdev_v1_test_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTestCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbosdev_v1_test_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexBuilderTestCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbosdev_v1_test_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompileTestCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbosdev_v1_test_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeGenTestCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbosdev_v1_test_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CelTestCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbosdev_v1_test_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTestCase_CheckResourceSetCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbosdev_v1_test_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTestCase_CheckResourceBatchCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbosdev_v1_test_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTestCase_PlaygroundValidateCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbosdev_v1_test_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTestCase_PlaygroundEvaluateCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbosdev_v1_test_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTestCase_AdminAddOrUpdatePolicyCall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cerbosdev_v1_test_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTestCase_Status); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_cerbosdev_v1_test_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ServerTestCase_CheckResourceSet)(nil),
		(*ServerTestCase_CheckResourceBatch)(nil),
		(*ServerTestCase_PlaygroundValidate)(nil),
		(*ServerTestCase_PlaygroundEvaluate)(nil),
		(*ServerTestCase_AdminAddOrUpdatePolicy)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cerbosdev_v1_test_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_cerbosdev_v1_test_proto_goTypes,
		DependencyIndexes: file_cerbosdev_v1_test_proto_depIdxs,
		MessageInfos:      file_cerbosdev_v1_test_proto_msgTypes,
	}.Build()
	File_cerbosdev_v1_test_proto = out.File
	file_cerbosdev_v1_test_proto_rawDesc = nil
	file_cerbosdev_v1_test_proto_goTypes = nil
	file_cerbosdev_v1_test_proto_depIdxs = nil
}
