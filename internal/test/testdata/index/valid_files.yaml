---
files:
  "test.txt": |-
    this is some text

  "resource.yaml": |-
    ---
    apiVersion: api.cerbos.dev/v1
    resourcePolicy:
      importDerivedRoles:
      - my_derived_roles
      resource: leave_request
      rules:
      - actions: ['*']
        effect: EFFECT_ALLOW
        roles:
        - admin
      version: "20210210"

  "resource_acme.yaml": |-
    ---
    apiVersion: api.cerbos.dev/v1
    resourcePolicy:
      importDerivedRoles:
      - my_derived_roles
      resource: leave_request
      scope: "acme"
      rules:
      - actions: ["create"]
        derivedRoles:
        - employee_that_owns_the_record
        effect: EFFECT_ALLOW
      - actions: ["view:*"]
        derivedRoles:
        - employee_that_owns_the_record
        - direct_manager
        effect: EFFECT_ALLOW
      - actions: ["view:public"]
        derivedRoles:
        - any_employee
        effect: EFFECT_ALLOW
      - actions: ["approve"]
        condition:
          match:
            expr: request.resource.attr.status == "PENDING_APPROVAL"
        derivedRoles:
        - direct_manager
        effect: EFFECT_ALLOW
      version: "20210210"

  "resource_acme_hr.yaml": |-
    ---
    apiVersion: api.cerbos.dev/v1
    resourcePolicy:
      importDerivedRoles:
      - my_derived_roles
      resource: leave_request
      scope: "acme.hr"
      rules:
      - actions: ["view:public"]
        derivedRoles:
        - direct_manager
        effect: EFFECT_ALLOW
      version: "20210210"

  "resource_acme_hr_uk.yaml": |-
    ---
    apiVersion: api.cerbos.dev/v1
    resourcePolicy:
      importDerivedRoles:
      - my_derived_roles
      resource: leave_request
      scope: "acme.hr.uk"
      rules:
      - actions: ["view:public"]
        derivedRoles:
        - direct_manager
        effect: EFFECT_DENY
      version: "20210210"

  "derived.yaml": |-
    ---
    apiVersion: "api.cerbos.dev/v1"
    derivedRoles:
      name: my_derived_roles
      definitions:
        - name: admin
          parentRoles: ["admin"]

        - name: tester
          parentRoles: ["dev", "qa"]

        - name: employee_that_owns_the_record
          parentRoles: ["employee"]
          condition:
            script: |-
              input.resource.attr.owner == input.principal.id

        - name: any_employee
          parentRoles: ["employee"]

        - name: direct_manager
          parentRoles: ["manager"]
          condition:
            match:
              all:
                of:
                  - expr: "request.resource.attr.geography == request.principal.attr.geography"
                  - expr: "request.resource.attr.geography == request.principal.attr.managed_geographies"

  "principal.yaml": |-
    ---
    apiVersion: "api.cerbos.dev/v1"
    principalPolicy:
      principal: donald_duck
      version: "20210210"
      rules:
        - resource: leave_request
          actions:
            - action: "*"
              condition:
                match:
                  expr: "request.resource.attr.dev_record == true"
              effect: EFFECT_ALLOW

        - resource: salary_record
          actions:
            - action: "*"
              effect: EFFECT_DENY

  "principal_acme.yaml": |-
    ---
    apiVersion: "api.cerbos.dev/v1"
    principalPolicy:
      principal: donald_duck
      version: "20210210"
      scope: "acme"
      rules:
        - resource: leave_request
          actions:
            - action: "*"
              condition:
                match:
                  expr: "request.resource.attr.dev_record == true"
              effect: EFFECT_ALLOW

  "principal_acme_corp.yaml": |-
    ---
    apiVersion: "api.cerbos.dev/v1"
    principalPolicy:
      principal: donald_duck
      version: "20210210"
      scope: "acme.corp"
      rules:
        - resource: leave_request
          actions:
            - action: "*"
              effect: EFFECT_ALLOW

  "variables.yaml": |-
    ---
    apiVersion: api.cerbos.dev/v1
    exportVariables:
      name: my_variables
      definitions:
        geography: request.resource.attr.geography

  "resource_import_variables.yaml": |-
    ---
    apiVersion: api.cerbos.dev/v1
    resourcePolicy:
      resource: import_variables
      version: "20210210"
      variables:
        import:
          - my_variables
      rules:
      - actions:
          - "*"
        effect: EFFECT_ALLOW
        roles:
          - admin

  "principal_import_variables.yaml": |-
    ---
    apiVersion: api.cerbos.dev/v1
    principalPolicy:
      principal: import_variables
      version: "20210210"
      variables:
        import:
          - my_variables
      rules:
        - resource: import_variables
          actions:
            - action: "*"
              effect: EFFECT_ALLOW

  "derived_roles_import_variables.yaml": |-
    ---
    apiVersion: api.cerbos.dev/v1
    derivedRoles:
      name: import_variables
      variables:
        import:
          - my_variables
      definitions:
        - name: admin
          parentRoles:
            - admin

  "resource_import_derived_roles_that_import_variables.yaml": |-
    ---
    apiVersion: api.cerbos.dev/v1
    resourcePolicy:
      resource: import_derived_roles_that_import_variables
      version: "20210210"
      importDerivedRoles:
        - import_variables
      rules:
      - actions:
          - "*"
        effect: EFFECT_ALLOW
        roles:
          - admin

wantCompilationUnits:
  - mainFqn: cerbos.principal.donald_duck.v20210210
    definitionFqns:
      - cerbos.principal.donald_duck.v20210210

  - mainFqn: cerbos.principal.donald_duck.v20210210/acme
    definitionFqns:
      - cerbos.principal.donald_duck.v20210210/acme
      - cerbos.principal.donald_duck.v20210210
    ancestorFqns:
      - cerbos.principal.donald_duck.v20210210

  - mainFqn: cerbos.principal.donald_duck.v20210210/acme.corp
    definitionFqns:
      - cerbos.principal.donald_duck.v20210210/acme.corp
      - cerbos.principal.donald_duck.v20210210/acme
      - cerbos.principal.donald_duck.v20210210
    ancestorFqns:
      - cerbos.principal.donald_duck.v20210210/acme
      - cerbos.principal.donald_duck.v20210210

  - mainFqn: cerbos.resource.leave_request.v20210210
    definitionFqns:
      - cerbos.resource.leave_request.v20210210
      - cerbos.derived_roles.my_derived_roles

  - mainFqn: cerbos.resource.leave_request.v20210210/acme
    definitionFqns:
      - cerbos.resource.leave_request.v20210210/acme
      - cerbos.resource.leave_request.v20210210
      - cerbos.derived_roles.my_derived_roles
    ancestorFqns:
      - cerbos.resource.leave_request.v20210210

  - mainFqn: cerbos.resource.leave_request.v20210210/acme.hr
    definitionFqns:
      - cerbos.resource.leave_request.v20210210/acme.hr
      - cerbos.resource.leave_request.v20210210/acme
      - cerbos.resource.leave_request.v20210210
      - cerbos.derived_roles.my_derived_roles
    ancestorFqns:
      - cerbos.resource.leave_request.v20210210/acme
      - cerbos.resource.leave_request.v20210210

  - mainFqn: cerbos.resource.leave_request.v20210210/acme.hr.uk
    definitionFqns:
      - cerbos.resource.leave_request.v20210210/acme.hr.uk
      - cerbos.resource.leave_request.v20210210/acme.hr
      - cerbos.resource.leave_request.v20210210/acme
      - cerbos.resource.leave_request.v20210210
      - cerbos.derived_roles.my_derived_roles
    ancestorFqns:
      - cerbos.resource.leave_request.v20210210/acme.hr
      - cerbos.resource.leave_request.v20210210/acme
      - cerbos.resource.leave_request.v20210210

  - mainFqn: cerbos.resource.import_variables.v20210210
    definitionFqns:
      - cerbos.resource.import_variables.v20210210
      - cerbos.export_variables.my_variables

  - mainFqn: cerbos.principal.import_variables.v20210210
    definitionFqns:
      - cerbos.principal.import_variables.v20210210
      - cerbos.export_variables.my_variables

  - mainFqn: cerbos.resource.import_derived_roles_that_import_variables.v20210210
    definitionFqns:
      - cerbos.resource.import_derived_roles_that_import_variables.v20210210
      - cerbos.derived_roles.import_variables
      - cerbos.export_variables.my_variables
