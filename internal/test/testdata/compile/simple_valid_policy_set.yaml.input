-- resource_policies/leave_request_20210210.yaml --
---
apiVersion: api.cerbos.dev/v1
resourcePolicy:
  resource: leave_request
  version: "20210210"
  importDerivedRoles:
    - my_derived_roles
  schemas:
    principalSchema:
      ref: cerbos:///complex_object.json
    resourceSchema:
      ref: cerbos:///complex_object.json
  rules:
    - actions: ['*']
      effect: EFFECT_ALLOW
      roles:
        - admin
      name: wildcard
      output:
        when:
          ruleActivated: |-
            "wildcard:%s".format([request.principal.id])
          conditionNotMet: |-
            "condition_not_met:wildcard:%s".format([request.principal.id])
    - actions: ["create"]
      derivedRoles:
        - employee_that_owns_the_record
      effect: EFFECT_ALLOW
      output:
        when:
          ruleActivated: |-
            "create:%s".format([request.principal.id])
    - actions: ["view:*"]
      derivedRoles:
        - employee_that_owns_the_record
        - direct_manager
      effect: EFFECT_ALLOW
      output:
        when:
          conditionNotMet: |-
            "something_arbitrary"
    - actions: ["view:public"]
      derivedRoles:
        - any_employee
      effect: EFFECT_ALLOW
    - actions: ["approve"]
      condition:
        match:
          expr: request.resource.attr.status == "PENDING_APPROVAL"
      derivedRoles:
        - direct_manager
      effect: EFFECT_ALLOW
      output:
        when:
          ruleActivated: |-
            "pending_approval:%s".format([request.resource.attr.status == "PENDING_APPROVAL"])

-- derived_roles/my_derived_roles.yaml --
---
apiVersion: "api.cerbos.dev/v1"
derivedRoles:
  name: my_derived_roles
  definitions:
    - name: tester
      parentRoles: ["dev", "qa"]

    - name: employee_that_owns_the_record
      parentRoles: ["employee"]
      condition:
        match:
          expr: R.attr.owner == P.id

    - name: any_employee
      parentRoles: ["employee"]

    - name: direct_manager
      parentRoles: ["manager"]
      condition:
        match:
          all:
            of:
              - expr: "request.resource.attr.geography == request.principal.attr.geography"
              - expr: "request.resource.attr.geography == request.principal.attr.managed_geographies"
