---
condition:
  all:
    of:
      - expr: |-
          hierarchy("a.b.c") == hierarchy(["a","b","c"])
      - expr: |-
          hierarchy("a:b:c", ":").size() == 3
      - expr: |-
          hierarchy("a.b").ancestorOf(hierarchy("a.b.c.d")) == true
      - expr: |-
          hierarchy(R.attr.scope).commonAncestors(hierarchy(P.attr.scope)) == hierarchy("foo.bar")
      - expr: |-
          hierarchy("a.b.c.d").descendentOf(hierarchy("a.b")) == true
      - expr: |-
          hierarchy("a.b.c").immediateChildOf(hierarchy("a.b")) == true && hierarchy("a.b.c.d").immediateChildOf(hierarchy("a.b")) == false
      - expr: |-
          hierarchy("a.b").immediateParentOf(hierarchy("a.b.c")) == true && hierarchy("a.b").immediateParentOf(hierarchy("a.b.c.d")) == false
      - expr: |-
          hierarchy("a.b.c").overlaps(hierarchy("a.b.c.d.e")) == true && hierarchy("a.b.x").overlaps(hierarchy("a.b.c.d.e")) == false
      - expr: |-
          hierarchy("a.b.c").siblingOf(hierarchy("a.b.d")) == true
      - expr: |-
          hierarchy("a.b.c.d")[1] == "b"
input: {
  "requestId": "test",
  "actions": ["*"],
  "principal": {
    "id": "john",
    "roles": ["employee"],
    "attr": {
      "department": "marketing",
      "scope": "foo.bar.baz.qux",
    }
  },
  "resource": {
    "kind": "leave_request",
    "attr": {
      "scope": "foo.bar",
    }
  }
}
want: true
