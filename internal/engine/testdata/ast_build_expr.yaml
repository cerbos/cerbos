---
"{a:2, b: 3}":
  expression:
    operator: struct
    operands:
      - expression:
          operator: "set-field"
          operands:
            - variable: a
            - value: 2
      - expression:
          operator: "set-field"
          operands:
            - variable: b
            - value: 3
"a[b].c.d":
  expression:
    operator: "get-field"
    operands:
      - expression:
          operator: "get-field"
          operands:
            - expression:
                operator: index
                operands:
                  - variable: a
                  - variable: b
            - variable: c
      - variable: d

"x.all(t, t > 0)":
  expression:
    operator: all
    operands:
      - variable: x
      - expression:
          operator: lambda
          operands:
            - expression:
                operator: gt
                operands:
                  - variable: t
                  - value: 0
            - variable: t

"x.filter(t, t > 0)":
  expression:
    operator: filter
    operands:
      - variable: x
      - expression:
          operator: lambda
          operands:
            - expression:
                operator: gt
                operands:
                  - variable: t
                  - value: 0
            - variable: t

"x.exists_one(t, t > 0)":
  expression:
    operator: exists_one
    operands:
      - variable: x
      - expression:
          operator: lambda
          operands:
            - expression:
                operator: gt
                operands:
                  - variable: t
                  - value: 0
            - variable: t

"x.exists(t, t > 0)":
  expression:
    operator: exists
    operands:
      - variable: x
      - expression:
          operator: lambda
          operands:
            - expression:
                operator: gt
                operands:
                  - variable: t
                  - value: 0
            - variable: t

"x.map(t, t.upperAscii())":
  expression:
    operator: map
    operands:
      - variable: x
      - expression:
          operator: lambda
          operands:
            - expression:
                operands:
                  - variable: t
                operator: upperAscii
            - variable: t

"x.f(a,3)":
  expression:
    operands:
      - variable: x
      - variable: a
      - value: 3
    operator: f
"f(a,3)":
  expression:
    operands:
      - variable: a
      - value: 3
    operator: f
"a[b].c":
  expression:
    operands:
      - expression:
          operands:
            - variable: a
            - variable: b
          operator: index
      - variable: c
    operator: get-field
"z + [2,3]":
      expression:
        operands:
          - variable: z
          - value:
              - 2
              - 3
        operator: add
"[1,a + 2,\"q\"]":
  expression:
    operands:
      - value: 1
      - expression:
          operands:
            - variable: a
            - value: 2
          operator: add
      - value: q
    operator: list
"has(a.b)":
  value: true
"a - 2":
  expression:
    operands:
      - variable: a
      - value: 2
    operator: sub
"a * 2":
  expression:
    operands:
      - variable: a
      - value: 2
    operator: mult
"a / 2":
  expression:
    operands:
      - variable: a
      - value: 2
    operator: div
"a % 2":
  expression:
    operands:
      - variable: a
      - value: 2
    operator: mod

"duration(\"1h\")":
  expression:
    operator: duration
    operands:
      - value: "1h"

"now()":
  expression:
    operator: now

"a && b":
  expression:
    operator: and
    operands:
      - variable: a
      - variable: b

"a || b":
  expression:
    operator: or
    operands:
      - variable: a
      - variable: b
